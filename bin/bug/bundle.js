!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=13)}([function(e,t){function n(e,t){if(!(this instanceof n))return new n(e,t);this.x=e||0,this.y=t||0}e.exports=n,n.fromArray=function(e){return new n(e[0]||0,e[1]||0)},n.fromObject=function(e){return new n(e.x||0,e.y||0)},n.prototype.addX=function(e){return this.x+=e.x,this},n.prototype.addY=function(e){return this.y+=e.y,this},n.prototype.add=function(e){return this.x+=e.x,this.y+=e.y,this},n.prototype.addScalar=function(e){return this.x+=e,this.y+=e,this},n.prototype.addScalarX=function(e){return this.x+=e,this},n.prototype.addScalarY=function(e){return this.y+=e,this},n.prototype.subtractX=function(e){return this.x-=e.x,this},n.prototype.subtractY=function(e){return this.y-=e.y,this},n.prototype.subtract=function(e){return this.x-=e.x,this.y-=e.y,this},n.prototype.subtractScalar=function(e){return this.x-=e,this.y-=e,this},n.prototype.subtractScalarX=function(e){return this.x-=e,this},n.prototype.subtractScalarY=function(e){return this.y-=e,this},n.prototype.divideX=function(e){return this.x/=e.x,this},n.prototype.divideY=function(e){return this.y/=e.y,this},n.prototype.divide=function(e){return this.x/=e.x,this.y/=e.y,this},n.prototype.divideScalar=function(e){return 0!==e?(this.x/=e,this.y/=e):(this.x=0,this.y=0),this},n.prototype.divideScalarX=function(e){return 0!==e?this.x/=e:this.x=0,this},n.prototype.divideScalarY=function(e){return 0!==e?this.y/=e:this.y=0,this},n.prototype.invertX=function(){return this.x*=-1,this},n.prototype.invertY=function(){return this.y*=-1,this},n.prototype.invert=function(){return this.invertX(),this.invertY(),this},n.prototype.multiplyX=function(e){return this.x*=e.x,this},n.prototype.multiplyY=function(e){return this.y*=e.y,this},n.prototype.multiply=function(e){return this.x*=e.x,this.y*=e.y,this},n.prototype.multiplyScalar=function(e){return this.x*=e,this.y*=e,this},n.prototype.multiplyScalarX=function(e){return this.x*=e,this},n.prototype.multiplyScalarY=function(e){return this.y*=e,this},n.prototype.normalize=function(){var e=this.length();return 0===e?(this.x=1,this.y=0):this.divide(n(e,e)),this},n.prototype.norm=n.prototype.normalize,n.prototype.limit=function(e,t){return Math.abs(this.x)>e&&(this.x*=t),Math.abs(this.y)>e&&(this.y*=t),this},n.prototype.randomize=function(e,t){return this.randomizeX(e,t),this.randomizeY(e,t),this},n.prototype.randomizeX=function(e,t){var n=Math.min(e.x,t.x),r=Math.max(e.x,t.x);return this.x=i(n,r),this},n.prototype.randomizeY=function(e,t){var n=Math.min(e.y,t.y),r=Math.max(e.y,t.y);return this.y=i(n,r),this},n.prototype.randomizeAny=function(e,t){return Math.round(Math.random())?this.randomizeX(e,t):this.randomizeY(e,t),this},n.prototype.unfloat=function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},n.prototype.toFixed=function(e){return void 0===e&&(e=8),this.x=this.x.toFixed(e),this.y=this.y.toFixed(e),this},n.prototype.mixX=function(e,t){return void 0===t&&(t=.5),this.x=(1-t)*this.x+t*e.x,this},n.prototype.mixY=function(e,t){return void 0===t&&(t=.5),this.y=(1-t)*this.y+t*e.y,this},n.prototype.mix=function(e,t){return this.mixX(e,t),this.mixY(e,t),this},n.prototype.clone=function(){return new n(this.x,this.y)},n.prototype.copyX=function(e){return this.x=e.x,this},n.prototype.copyY=function(e){return this.y=e.y,this},n.prototype.copy=function(e){return this.copyX(e),this.copyY(e),this},n.prototype.zero=function(){return this.x=this.y=0,this},n.prototype.dot=function(e){return this.x*e.x+this.y*e.y},n.prototype.cross=function(e){return this.x*e.y-this.y*e.x},n.prototype.projectOnto=function(e){var t=(this.x*e.x+this.y*e.y)/(e.x*e.x+e.y*e.y);return this.x=t*e.x,this.y=t*e.y,this},n.prototype.horizontalAngle=function(){return Math.atan2(this.y,this.x)},n.prototype.horizontalAngleDeg=function(){return o(this.horizontalAngle())},n.prototype.verticalAngle=function(){return Math.atan2(this.x,this.y)},n.prototype.verticalAngleDeg=function(){return o(this.verticalAngle())},n.prototype.angle=n.prototype.horizontalAngle,n.prototype.angleDeg=n.prototype.horizontalAngleDeg,n.prototype.direction=n.prototype.horizontalAngle,n.prototype.rotate=function(e){var t=this.x*Math.cos(e)-this.y*Math.sin(e),n=this.x*Math.sin(e)+this.y*Math.cos(e);return this.x=t,this.y=n,this},n.prototype.rotateDeg=function(e){return e=u(e),this.rotate(e)},n.prototype.rotateTo=function(e){return this.rotate(e-this.angle())},n.prototype.rotateToDeg=function(e){return e=u(e),this.rotateTo(e)},n.prototype.rotateBy=function(e){var t=this.angle()+e;return this.rotate(t)},n.prototype.rotateByDeg=function(e){return e=u(e),this.rotateBy(e)},n.prototype.distanceX=function(e){return this.x-e.x},n.prototype.absDistanceX=function(e){return Math.abs(this.distanceX(e))},n.prototype.distanceY=function(e){return this.y-e.y},n.prototype.absDistanceY=function(e){return Math.abs(this.distanceY(e))},n.prototype.distance=function(e){return Math.sqrt(this.distanceSq(e))},n.prototype.distanceSq=function(e){var t=this.distanceX(e),n=this.distanceY(e);return t*t+n*n},n.prototype.length=function(){return Math.sqrt(this.lengthSq())},n.prototype.lengthSq=function(){return this.x*this.x+this.y*this.y},n.prototype.magnitude=n.prototype.length,n.prototype.isZero=function(){return 0===this.x&&0===this.y},n.prototype.isEqualTo=function(e){return this.x===e.x&&this.y===e.y},n.prototype.toString=function(){return"x:"+this.x+", y:"+this.y},n.prototype.toArray=function(){return[this.x,this.y]},n.prototype.toObject=function(){return{x:this.x,y:this.y}};var r=180/Math.PI;function i(e,t){return Math.floor(Math.random()*(t-e+1)+e)}function o(e){return e*r}function u(e){return e/r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.normalRange=t.randFromNormalDist=t.multi=t.rangeDecimal=t.range=t.randBool=t.randInt=t.vectorEquals=void 0,t.vectorEquals=function(e,t,n){void 0===n&&(n=!0);var r=e.x===t.x&&e.y===t.y;return!r&&n&&(console.log("Testing for vector equality but failed."),console.log(e),console.log(t)),r},t.randInt=function(e,t){return Math.floor(Math.random()*(t-e)+e+.49)},t.randBool=function(){return 1===t.randInt(0,1)},t.range=function(e,t){return Math.floor(Math.random()*t)+e-t/2},t.rangeDecimal=function(e,n,r){var i=Math.pow(10,r);return t.range(e*i,n*i)/i},t.multi=function(e,t){return function(){for(var n=0;n<e-1;n++)t(n);return t(e-1)}},t.randFromNormalDist=function(){for(var e=0,n=0;0===e;)e=Math.random();for(;0===n;)n=Math.random();var r=Math.sqrt(-2*Math.log(e))*Math.cos(2*Math.PI*n);return(r=r/10+.5)>1||r<0?t.randFromNormalDist():r},t.normalRange=function(e,n){var r=(n-e)*t.randFromNormalDist()+e;return window.DEBUG&&console.log(r),Math.floor(r)}},function(e,t,n){"use strict";e.exports=n(14)},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(0)),o=n(44),u=n(7),a=n(10),l=n(23),s=n(1),c=function(){function e(e,t){var n=this;this.updateSpeed=4,this.zIndexChanged=new o.Subject,this.behaviorQueue=[],this.queueBehavior=function(e){n.behaviorQueue.unshift(e)},this.id=e||0,Object.assign(this,{pos:new i.default(0,0),size:new i.default(30,20),direction:new i.default(1,0),speed:1,behaviorQueue:[],spontaneous:function(){return!1}},t),this.queueBehavior(new a.Pause(this,s.randInt(25,40)))}return e.prototype.update=function(e){if(void 0===e&&(e=[]),this.spontaneous()&&(this.queueBehavior(new u.TurnAround(this)),this.queueBehavior(new a.Pause(this,s.randInt(10,20)))),this.behaviorQueue&&this.behaviorQueue.length>0)this.behaviorQueue[0].do(e);else{var t=this.getNextBehavior();t.do(e),this.queueBehavior(t)}return this},e.prototype.getNextBehavior=function(){return s.randBool()?new a.Pause(this,s.randInt(20,40)):new l.GroundWalk(this,s.normalRange(60,140))},e.prototype.finishBehavior=function(){this.behaviorQueue.shift()},e}();t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BugBehavior=void 0;var r=function(e){this.bug=e};t.BugBehavior=r},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(0)),o=n(24),u=function(e,t){var n=this;this.updateSpeed=4,this.getAbsolutePos=function(e,t,r){if(!t&&!r){var i=n.getAbsolutePos(e,n.pos.clone(),n.graph);if(i)return i;throw new Error("Couldn't find branch in tree while calculating position")}if(r===e)return t;var o=r.left&&n.getAbsolutePos(e,t.clone().add(r.node),r.left);if(o)return o;var u=r.right&&n.getAbsolutePos(e,t.clone().add(r.node),r.right);return u||void 0},this.update=function(e){n.graph.update()},this.id=e||0,Object.assign(this,{pos:new i.default(1,0),size:new i.default(1,1),direction:new i.default(1,0),graph:new o.TreeStruct},t)};t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.circle=t.clearCanvas=t.fixY=void 0,t.fixY=function(e,t){return e.canvas.height-t},t.clearCanvas=function(e){e.canvas,e.clearRect(0,0,e.canvas.width,e.canvas.height),e.rect(0,0,e.canvas.width,e.canvas.height),e.beginPath()},t.circle=function(e,t){e.beginPath(),e.fillStyle="rgb(0, 0, 255)",e.arc(0,0,t,0,2*Math.PI,!1),e.fill()}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.TurnAround=void 0;var o=function(e){function t(t){return e.call(this,t)||this}return i(t,e),t.prototype.do=function(){var e=this.bug,t=e.direction.clone().norm().multiplyScalar(e.size.x+1);e.pos.subtract(t),e.direction.multiplyScalar(-1),e.finishBehavior()},t}(n(4).BugBehavior);t.TurnAround=o},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(0)),o=function(){function e(e,t){this.id=0,this.id=e||0,Object.assign(this,{pos:new i.default(0,0),size:new i.default(10,50)},t)}return e.prototype.update=function(){},e}();t.default=o},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;function u(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,l=u(e),s=1;s<arguments.length;s++){for(var c in n=Object(arguments[s]))i.call(n,c)&&(l[c]=n[c]);if(r){a=r(n);for(var f=0;f<a.length;f++)o.call(n,a[f])&&(l[a[f]]=n[a[f]])}}return l}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.Pause=void 0;var o=function(e){function t(t,n){var r=e.call(this,t)||this;return r.countdown=n,r}return i(t,e),t.prototype.do=function(){this.countdown--,0==this.countdown&&this.bug.finishBehavior()},t}(n(4).BugBehavior);t.Pause=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.walk=void 0,t.walk=function(e){var t=e.direction,n=e.speed,r=e.pos;r.addScalarX(t.x*n),r.addScalarY(t.y*n)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PlantagoStruct=void 0;var r=n(0),i=n(1),o=function(e,t,n,o){void 0===e&&(e=1),void 0===n&&(n=5),this.update=function(){},this.depth=e,this.parent=t,this.maxDepth=n,this.node=new r(0,160),this.node.rotateByDeg(o||i.normalRange(-30,-150))};t.PlantagoStruct=o},function(e,t,n){"use strict";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),o=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=o(n(2)),l=o(n(15)),s=u(n(0)),c=u(n(19)),f=n(21),d=u(n(8)),p=u(n(26)),h=u(n(27));n(35);var y=u(n(39)),v=n(40),m=u(n(41)),b=n(1),g=u(n(42)),w=window.innerHeight,x=window.innerWidth;console.info("Starting Bug app...");var _=[new d.default(v.generateId(),{pos:new s.default(-10,0),size:new s.default(10,w)}),new d.default(v.generateId(),{pos:new s.default(x,0),size:new s.default(10,w)})],E=new p.default(_),k=new f.GameEngine({gameUI:new h.default("bug-ui",E),entityManager:E}),S=new m.default((function(){return b.range(8e3,4e3)}),(function(){return b.range(10,4)})).get,T={game:k,height:w,width:x,bugFactory:new y.default(v.generateId,S),treeFactory:new g.default(v.generateId,S),entityManager:E};l.render(a.createElement(c.default,T),document.getElementById("root")),window.Victor=s.default,window.DEBUG=!1},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(9),i="function"==typeof Symbol&&Symbol.for,o=i?Symbol.for("react.element"):60103,u=i?Symbol.for("react.portal"):60106,a=i?Symbol.for("react.fragment"):60107,l=i?Symbol.for("react.strict_mode"):60108,s=i?Symbol.for("react.profiler"):60114,c=i?Symbol.for("react.provider"):60109,f=i?Symbol.for("react.context"):60110,d=i?Symbol.for("react.forward_ref"):60112,p=i?Symbol.for("react.suspense"):60113,h=i?Symbol.for("react.memo"):60115,y=i?Symbol.for("react.lazy"):60116,v="function"==typeof Symbol&&Symbol.iterator;function m(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g={};function w(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||b}function x(){}function _(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(m(85));this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},x.prototype=w.prototype;var E=_.prototype=new x;E.constructor=_,r(E,w.prototype),E.isPureReactComponent=!0;var k={current:null},S=Object.prototype.hasOwnProperty,T={key:!0,ref:!0,__self:!0,__source:!0};function P(e,t,n){var r,i={},u=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(u=""+t.key),t)S.call(t,r)&&!T.hasOwnProperty(r)&&(i[r]=t[r]);var l=arguments.length-2;if(1===l)i.children=n;else if(1<l){for(var s=Array(l),c=0;c<l;c++)s[c]=arguments[c+2];i.children=s}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===i[r]&&(i[r]=l[r]);return{$$typeof:o,type:e,key:u,ref:a,props:i,_owner:k.current}}function C(e){return"object"==typeof e&&null!==e&&e.$$typeof===o}var O=/\/+/g,N=[];function M(e,t,n,r){if(N.length){var i=N.pop();return i.result=e,i.keyPrefix=t,i.func=n,i.context=r,i.count=0,i}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function I(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function z(e,t,n){return null==e?0:function e(t,n,r,i){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var l=!1;if(null===t)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case o:case u:l=!0}}if(l)return r(i,t,""===n?"."+j(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var s=0;s<t.length;s++){var c=n+j(a=t[s],s);l+=e(a,c,r,i)}else if(null===t||"object"!=typeof t?c=null:c="function"==typeof(c=v&&t[v]||t["@@iterator"])?c:null,"function"==typeof c)for(t=c.call(t),s=0;!(a=t.next()).done;)l+=e(a=a.value,c=n+j(a,s++),r,i);else if("object"===a)throw r=""+t,Error(m(31,"[object Object]"===r?"object with keys {"+Object.keys(t).join(", ")+"}":r,""));return l}(e,"",t,n)}function j(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,(function(e){return t[e]}))}(e.key):t.toString(36)}function D(e,t){e.func.call(e.context,t,e.count++)}function A(e,t,n){var r=e.result,i=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?R(e,r,n,(function(e){return e})):null!=e&&(C(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,i+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n)),r.push(e))}function R(e,t,n,r,i){var o="";null!=n&&(o=(""+n).replace(O,"$&/")+"/"),z(e,A,t=M(t,o,r,i)),I(t)}var F={current:null};function L(){var e=F.current;if(null===e)throw Error(m(321));return e}var U={ReactCurrentDispatcher:F,ReactCurrentBatchConfig:{suspense:null},ReactCurrentOwner:k,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:function(e,t,n){if(null==e)return e;var r=[];return R(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;z(e,D,t=M(null,null,t,n)),I(t)},count:function(e){return z(e,(function(){return null}),null)},toArray:function(e){var t=[];return R(e,t,null,(function(e){return e})),t},only:function(e){if(!C(e))throw Error(m(143));return e}},t.Component=w,t.Fragment=a,t.Profiler=s,t.PureComponent=_,t.StrictMode=l,t.Suspense=p,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=U,t.cloneElement=function(e,t,n){if(null==e)throw Error(m(267,e));var i=r({},e.props),u=e.key,a=e.ref,l=e._owner;if(null!=t){if(void 0!==t.ref&&(a=t.ref,l=k.current),void 0!==t.key&&(u=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)S.call(t,c)&&!T.hasOwnProperty(c)&&(i[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)i.children=n;else if(1<c){s=Array(c);for(var f=0;f<c;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:o,type:e.type,key:u,ref:a,props:i,_owner:l}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:c,_context:e},e.Consumer=e},t.createElement=P,t.createFactory=function(e){var t=P.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:d,render:e}},t.isValidElement=C,t.lazy=function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},t.memo=function(e,t){return{$$typeof:h,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return L().useCallback(e,t)},t.useContext=function(e,t){return L().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return L().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return L().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return L().useLayoutEffect(e,t)},t.useMemo=function(e,t){return L().useMemo(e,t)},t.useReducer=function(e,t,n){return L().useReducer(e,t,n)},t.useRef=function(e){return L().useRef(e)},t.useState=function(e){return L().useState(e)},t.version="16.13.1"},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}}(),e.exports=n(16)},function(e,t,n){"use strict";
/** @license React v16.13.1
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(2),i=n(9),o=n(17);function u(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(u(227));function a(e,t,n,r,i,o,u,a,l){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(e){this.onError(e)}}var l=!1,s=null,c=!1,f=null,d={onError:function(e){l=!0,s=e}};function p(e,t,n,r,i,o,u,c,f){l=!1,s=null,a.apply(d,arguments)}var h=null,y=null,v=null;function m(e,t,n){var r=e.type||"unknown-event";e.currentTarget=v(n),function(e,t,n,r,i,o,a,d,h){if(p.apply(this,arguments),l){if(!l)throw Error(u(198));var y=s;l=!1,s=null,c||(c=!0,f=y)}}(r,t,void 0,e),e.currentTarget=null}var b=null,g={};function w(){if(b)for(var e in g){var t=g[e],n=b.indexOf(e);if(!(-1<n))throw Error(u(96,e));if(!_[n]){if(!t.extractEvents)throw Error(u(97,e));for(var r in _[n]=t,n=t.eventTypes){var i=void 0,o=n[r],a=t,l=r;if(E.hasOwnProperty(l))throw Error(u(99,l));E[l]=o;var s=o.phasedRegistrationNames;if(s){for(i in s)s.hasOwnProperty(i)&&x(s[i],a,l);i=!0}else o.registrationName?(x(o.registrationName,a,l),i=!0):i=!1;if(!i)throw Error(u(98,r,e))}}}}function x(e,t,n){if(k[e])throw Error(u(100,e));k[e]=t,S[e]=t.eventTypes[n].dependencies}var _=[],E={},k={},S={};function T(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];if(!g.hasOwnProperty(t)||g[t]!==r){if(g[t])throw Error(u(102,t));g[t]=r,n=!0}}n&&w()}var P=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),C=null,O=null,N=null;function M(e){if(e=y(e)){if("function"!=typeof C)throw Error(u(280));var t=e.stateNode;t&&(t=h(t),C(e.stateNode,e.type,t))}}function I(e){O?N?N.push(e):N=[e]:O=e}function z(){if(O){var e=O,t=N;if(N=O=null,M(e),t)for(e=0;e<t.length;e++)M(t[e])}}function j(e,t){return e(t)}function D(e,t,n,r,i){return e(t,n,r,i)}function A(){}var R=j,F=!1,L=!1;function U(){null===O&&null===N||(A(),z())}function B(e,t,n){if(L)return e(t,n);L=!0;try{return R(e,t,n)}finally{L=!1,U()}}var V=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,W=Object.prototype.hasOwnProperty,Q={},Y={};function H(e,t,n,r,i,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o}var q={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){q[e]=new H(e,0,!1,e,null,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];q[t]=new H(t,1,!1,e[1],null,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){q[e]=new H(e,2,!1,e.toLowerCase(),null,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){q[e]=new H(e,2,!1,e,null,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){q[e]=new H(e,3,!1,e.toLowerCase(),null,!1)})),["checked","multiple","muted","selected"].forEach((function(e){q[e]=new H(e,3,!0,e,null,!1)})),["capture","download"].forEach((function(e){q[e]=new H(e,4,!1,e,null,!1)})),["cols","rows","size","span"].forEach((function(e){q[e]=new H(e,6,!1,e,null,!1)})),["rowSpan","start"].forEach((function(e){q[e]=new H(e,5,!1,e.toLowerCase(),null,!1)}));var $=/[\-:]([a-z])/g;function X(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace($,X);q[t]=new H(t,1,!1,e,null,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace($,X);q[t]=new H(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace($,X);q[t]=new H(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)})),["tabIndex","crossOrigin"].forEach((function(e){q[e]=new H(e,1,!1,e.toLowerCase(),null,!1)})),q.xlinkHref=new H("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach((function(e){q[e]=new H(e,1,!1,e.toLowerCase(),null,!0)}));var K=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function G(e,t,n,r){var i=q.hasOwnProperty(t)?q[t]:null;(null!==i?0===i.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,i,r)&&(n=null),r||null===i?function(e){return!!W.call(Y,e)||!W.call(Q,e)&&(V.test(e)?Y[e]=!0:(Q[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=null===n?3!==i.type&&"":n:(t=i.attributeName,r=i.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(i=i.type)||4===i&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}K.hasOwnProperty("ReactCurrentDispatcher")||(K.ReactCurrentDispatcher={current:null}),K.hasOwnProperty("ReactCurrentBatchConfig")||(K.ReactCurrentBatchConfig={suspense:null});var J=/^(.*)[\\\/]/,Z="function"==typeof Symbol&&Symbol.for,ee=Z?Symbol.for("react.element"):60103,te=Z?Symbol.for("react.portal"):60106,ne=Z?Symbol.for("react.fragment"):60107,re=Z?Symbol.for("react.strict_mode"):60108,ie=Z?Symbol.for("react.profiler"):60114,oe=Z?Symbol.for("react.provider"):60109,ue=Z?Symbol.for("react.context"):60110,ae=Z?Symbol.for("react.concurrent_mode"):60111,le=Z?Symbol.for("react.forward_ref"):60112,se=Z?Symbol.for("react.suspense"):60113,ce=Z?Symbol.for("react.suspense_list"):60120,fe=Z?Symbol.for("react.memo"):60115,de=Z?Symbol.for("react.lazy"):60116,pe=Z?Symbol.for("react.block"):60121,he="function"==typeof Symbol&&Symbol.iterator;function ye(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=he&&e[he]||e["@@iterator"])?e:null}function ve(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case ne:return"Fragment";case te:return"Portal";case ie:return"Profiler";case re:return"StrictMode";case se:return"Suspense";case ce:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case ue:return"Context.Consumer";case oe:return"Context.Provider";case le:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case fe:return ve(e.type);case pe:return ve(e.render);case de:if(e=1===e._status?e._result:null)return ve(e)}return null}function me(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,i=e._debugSource,o=ve(e.type);n=null,r&&(n=ve(r.type)),r=o,o="",i?o=" (at "+i.fileName.replace(J,"")+":"+i.lineNumber+")":n&&(o=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}function be(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function ge(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function we(e){e._valueTracker||(e._valueTracker=function(e){var t=ge(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function xe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=ge(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function _e(e,t){var n=t.checked;return i({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=be(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function ke(e,t){null!=(t=t.checked)&&G(e,"checked",t,!1)}function Se(e,t){ke(e,t);var n=be(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Pe(e,t.type,n):t.hasOwnProperty("defaultValue")&&Pe(e,t.type,be(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Te(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Pe(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ce(e,t){return e=i({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function Oe(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+be(n),t=null,i=0;i<e.length;i++){if(e[i].value===n)return e[i].selected=!0,void(r&&(e[i].defaultSelected=!0));null!==t||e[i].disabled||(t=e[i])}null!==t&&(t.selected=!0)}}function Ne(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(u(91));return i({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Me(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(u(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(u(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:be(n)}}function Ie(e,t){var n=be(t.value),r=be(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ze(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var je="http://www.w3.org/1999/xhtml",De="http://www.w3.org/2000/svg";function Ae(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Re(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?Ae(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Fe,Le=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction((function(){return e(t,n)}))}:e}((function(e,t){if(e.namespaceURI!==De||"innerHTML"in e)e.innerHTML=t;else{for((Fe=Fe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Fe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}}));function Ue(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function Be(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ve={animationend:Be("Animation","AnimationEnd"),animationiteration:Be("Animation","AnimationIteration"),animationstart:Be("Animation","AnimationStart"),transitionend:Be("Transition","TransitionEnd")},We={},Qe={};function Ye(e){if(We[e])return We[e];if(!Ve[e])return e;var t,n=Ve[e];for(t in n)if(n.hasOwnProperty(t)&&t in Qe)return We[e]=n[t];return e}P&&(Qe=document.createElement("div").style,"AnimationEvent"in window||(delete Ve.animationend.animation,delete Ve.animationiteration.animation,delete Ve.animationstart.animation),"TransitionEvent"in window||delete Ve.transitionend.transition);var He=Ye("animationend"),qe=Ye("animationiteration"),$e=Ye("animationstart"),Xe=Ye("transitionend"),Ke="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Ge=new("function"==typeof WeakMap?WeakMap:Map);function Je(e){var t=Ge.get(e);return void 0===t&&(t=new Map,Ge.set(e,t)),t}function Ze(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).effectTag)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function et(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&(null!==(e=e.alternate)&&(t=e.memoizedState)),null!==t)return t.dehydrated}return null}function tt(e){if(Ze(e)!==e)throw Error(u(188))}function nt(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ze(e)))throw Error(u(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(null===i)break;var o=i.alternate;if(null===o){if(null!==(r=i.return)){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return tt(i),e;if(o===r)return tt(i),t;o=o.sibling}throw Error(u(188))}if(n.return!==r.return)n=i,r=o;else{for(var a=!1,l=i.child;l;){if(l===n){a=!0,n=i,r=o;break}if(l===r){a=!0,r=i,n=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===n){a=!0,n=o,r=i;break}if(l===r){a=!0,r=o,n=i;break}l=l.sibling}if(!a)throw Error(u(189))}}if(n.alternate!==r)throw Error(u(190))}if(3!==n.tag)throw Error(u(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function rt(e,t){if(null==t)throw Error(u(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function it(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var ot=null;function ut(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)m(e,t[r],n[r]);else t&&m(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function at(e){if(null!==e&&(ot=rt(ot,e)),e=ot,ot=null,e){if(it(e,ut),ot)throw Error(u(95));if(c)throw e=f,c=!1,f=null,e}}function lt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function st(e){if(!P)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var ct=[];function ft(e){e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>ct.length&&ct.push(e)}function dt(e,t,n,r){if(ct.length){var i=ct.pop();return i.topLevelType=e,i.eventSystemFlags=r,i.nativeEvent=t,i.targetInst=n,i}return{topLevelType:e,eventSystemFlags:r,nativeEvent:t,targetInst:n,ancestors:[]}}function pt(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=Pn(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var i=lt(e.nativeEvent);r=e.topLevelType;var o=e.nativeEvent,u=e.eventSystemFlags;0===n&&(u|=64);for(var a=null,l=0;l<_.length;l++){var s=_[l];s&&(s=s.extractEvents(r,t,o,i,u))&&(a=rt(a,s))}at(a)}}function ht(e,t,n){if(!n.has(e)){switch(e){case"scroll":$t(t,"scroll",!0);break;case"focus":case"blur":$t(t,"focus",!0),$t(t,"blur",!0),n.set("blur",null),n.set("focus",null);break;case"cancel":case"close":st(e)&&$t(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===Ke.indexOf(e)&&qt(e,t)}n.set(e,null)}}var yt,vt,mt,bt=!1,gt=[],wt=null,xt=null,_t=null,Et=new Map,kt=new Map,St=[],Tt="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),Pt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function Ct(e,t,n,r,i){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:i,container:r}}function Ot(e,t){switch(e){case"focus":case"blur":wt=null;break;case"dragenter":case"dragleave":xt=null;break;case"mouseover":case"mouseout":_t=null;break;case"pointerover":case"pointerout":Et.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":kt.delete(t.pointerId)}}function Nt(e,t,n,r,i,o){return null===e||e.nativeEvent!==o?(e=Ct(t,n,r,i,o),null!==t&&(null!==(t=Cn(t))&&vt(t)),e):(e.eventSystemFlags|=r,e)}function Mt(e){var t=Pn(e.target);if(null!==t){var n=Ze(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=et(n)))return e.blockedOn=t,void o.unstable_runWithPriority(e.priority,(function(){mt(n)}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function It(e){if(null!==e.blockedOn)return!1;var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);if(null!==t){var n=Cn(t);return null!==n&&vt(n),e.blockedOn=t,!1}return!0}function zt(e,t,n){It(e)&&n.delete(t)}function jt(){for(bt=!1;0<gt.length;){var e=gt[0];if(null!==e.blockedOn){null!==(e=Cn(e.blockedOn))&&yt(e);break}var t=Jt(e.topLevelType,e.eventSystemFlags,e.container,e.nativeEvent);null!==t?e.blockedOn=t:gt.shift()}null!==wt&&It(wt)&&(wt=null),null!==xt&&It(xt)&&(xt=null),null!==_t&&It(_t)&&(_t=null),Et.forEach(zt),kt.forEach(zt)}function Dt(e,t){e.blockedOn===t&&(e.blockedOn=null,bt||(bt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,jt)))}function At(e){function t(t){return Dt(t,e)}if(0<gt.length){Dt(gt[0],e);for(var n=1;n<gt.length;n++){var r=gt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==wt&&Dt(wt,e),null!==xt&&Dt(xt,e),null!==_t&&Dt(_t,e),Et.forEach(t),kt.forEach(t),n=0;n<St.length;n++)(r=St[n]).blockedOn===e&&(r.blockedOn=null);for(;0<St.length&&null===(n=St[0]).blockedOn;)Mt(n),null===n.blockedOn&&St.shift()}var Rt={},Ft=new Map,Lt=new Map,Ut=["abort","abort",He,"animationEnd",qe,"animationIteration",$e,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Xe,"transitionEnd","waiting","waiting"];function Bt(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],i=e[n+1],o="on"+(i[0].toUpperCase()+i.slice(1));o={phasedRegistrationNames:{bubbled:o,captured:o+"Capture"},dependencies:[r],eventPriority:t},Lt.set(r,t),Ft.set(r,o),Rt[i]=o}}Bt("blur blur cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focus focus input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),Bt("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),Bt(Ut,2);for(var Vt="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),Wt=0;Wt<Vt.length;Wt++)Lt.set(Vt[Wt],0);var Qt=o.unstable_UserBlockingPriority,Yt=o.unstable_runWithPriority,Ht=!0;function qt(e,t){$t(t,e,!1)}function $t(e,t,n){var r=Lt.get(t);switch(void 0===r?2:r){case 0:r=Xt.bind(null,t,1,e);break;case 1:r=Kt.bind(null,t,1,e);break;default:r=Gt.bind(null,t,1,e)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Xt(e,t,n,r){F||A();var i=Gt,o=F;F=!0;try{D(i,e,t,n,r)}finally{(F=o)||U()}}function Kt(e,t,n,r){Yt(Qt,Gt.bind(null,e,t,n,r))}function Gt(e,t,n,r){if(Ht)if(0<gt.length&&-1<Tt.indexOf(e))e=Ct(null,e,t,n,r),gt.push(e);else{var i=Jt(e,t,n,r);if(null===i)Ot(e,r);else if(-1<Tt.indexOf(e))e=Ct(i,e,t,n,r),gt.push(e);else if(!function(e,t,n,r,i){switch(t){case"focus":return wt=Nt(wt,e,t,n,r,i),!0;case"dragenter":return xt=Nt(xt,e,t,n,r,i),!0;case"mouseover":return _t=Nt(_t,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return Et.set(o,Nt(Et.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,kt.set(o,Nt(kt.get(o)||null,e,t,n,r,i)),!0}return!1}(i,e,t,n,r)){Ot(e,r),e=dt(e,r,null,t);try{B(pt,e)}finally{ft(e)}}}}function Jt(e,t,n,r){if(null!==(n=Pn(n=lt(r)))){var i=Ze(n);if(null===i)n=null;else{var o=i.tag;if(13===o){if(null!==(n=et(i)))return n;n=null}else if(3===o){if(i.stateNode.hydrate)return 3===i.tag?i.stateNode.containerInfo:null;n=null}else i!==n&&(n=null)}}e=dt(e,r,n,t);try{B(pt,e)}finally{ft(e)}return null}var Zt={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},en=["Webkit","ms","Moz","O"];function tn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Zt.hasOwnProperty(e)&&Zt[e]?(""+t).trim():t+"px"}function nn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),i=tn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}Object.keys(Zt).forEach((function(e){en.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Zt[t]=Zt[e]}))}));var rn=i({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function on(e,t){if(t){if(rn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(u(137,e,""));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(u(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(u(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(u(62,""))}}function un(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var an=je;function ln(e,t){var n=Je(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=S[t];for(var r=0;r<t.length;r++)ht(t[r],e,n)}function sn(){}function cn(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function fn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function dn(e,t){var n,r=fn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=fn(r)}}function pn(){for(var e=window,t=cn();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=cn((e=t.contentWindow).document)}return t}function hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var yn=null,vn=null;function mn(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function bn(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var gn="function"==typeof setTimeout?setTimeout:void 0,wn="function"==typeof clearTimeout?clearTimeout:void 0;function xn(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function _n(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var En=Math.random().toString(36).slice(2),kn="__reactInternalInstance$"+En,Sn="__reactEventHandlers$"+En,Tn="__reactContainere$"+En;function Pn(e){var t=e[kn];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Tn]||n[kn]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=_n(e);null!==e;){if(n=e[kn])return n;e=_n(e)}return t}n=(e=n).parentNode}return null}function Cn(e){return!(e=e[kn]||e[Tn])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function On(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(u(33))}function Nn(e){return e[Sn]||null}function Mn(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function In(e,t){var n=e.stateNode;if(!n)return null;var r=h(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(u(231,t,typeof n));return n}function zn(e,t,n){(t=In(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function jn(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Mn(t);for(t=n.length;0<t--;)zn(n[t],"captured",e);for(t=0;t<n.length;t++)zn(n[t],"bubbled",e)}}function Dn(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=In(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=rt(n._dispatchListeners,t),n._dispatchInstances=rt(n._dispatchInstances,e))}function An(e){e&&e.dispatchConfig.registrationName&&Dn(e._targetInst,null,e)}function Rn(e){it(e,jn)}var Fn=null,Ln=null,Un=null;function Bn(){if(Un)return Un;var e,t,n=Ln,r=n.length,i="value"in Fn?Fn.value:Fn.textContent,o=i.length;for(e=0;e<r&&n[e]===i[e];e++);var u=r-e;for(t=1;t<=u&&n[r-t]===i[o-t];t++);return Un=i.slice(e,1<t?1-t:void 0)}function Vn(){return!0}function Wn(){return!1}function Qn(e,t,n,r){for(var i in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(i)&&((t=e[i])?this[i]=t(n):"target"===i?this.target=r:this[i]=n[i]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Vn:Wn,this.isPropagationStopped=Wn,this}function Yn(e,t,n,r){if(this.eventPool.length){var i=this.eventPool.pop();return this.call(i,e,t,n,r),i}return new this(e,t,n,r)}function Hn(e){if(!(e instanceof this))throw Error(u(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function qn(e){e.eventPool=[],e.getPooled=Yn,e.release=Hn}i(Qn.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Vn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Vn)},persist:function(){this.isPersistent=Vn},isPersistent:Wn,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Wn,this._dispatchInstances=this._dispatchListeners=null}}),Qn.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},Qn.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return i(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=i({},r.Interface,e),n.extend=r.extend,qn(n),n},qn(Qn);var $n=Qn.extend({data:null}),Xn=Qn.extend({data:null}),Kn=[9,13,27,32],Gn=P&&"CompositionEvent"in window,Jn=null;P&&"documentMode"in document&&(Jn=document.documentMode);var Zn=P&&"TextEvent"in window&&!Jn,er=P&&(!Gn||Jn&&8<Jn&&11>=Jn),tr=String.fromCharCode(32),nr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},rr=!1;function ir(e,t){switch(e){case"keyup":return-1!==Kn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function or(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var ur=!1;var ar={eventTypes:nr,extractEvents:function(e,t,n,r){var i;if(Gn)e:{switch(e){case"compositionstart":var o=nr.compositionStart;break e;case"compositionend":o=nr.compositionEnd;break e;case"compositionupdate":o=nr.compositionUpdate;break e}o=void 0}else ur?ir(e,n)&&(o=nr.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=nr.compositionStart);return o?(er&&"ko"!==n.locale&&(ur||o!==nr.compositionStart?o===nr.compositionEnd&&ur&&(i=Bn()):(Ln="value"in(Fn=r)?Fn.value:Fn.textContent,ur=!0)),o=$n.getPooled(o,t,n,r),i?o.data=i:null!==(i=or(n))&&(o.data=i),Rn(o),i=o):i=null,(e=Zn?function(e,t){switch(e){case"compositionend":return or(t);case"keypress":return 32!==t.which?null:(rr=!0,tr);case"textInput":return(e=t.data)===tr&&rr?null:e;default:return null}}(e,n):function(e,t){if(ur)return"compositionend"===e||!Gn&&ir(e,t)?(e=Bn(),Un=Ln=Fn=null,ur=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return er&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=Xn.getPooled(nr.beforeInput,t,n,r)).data=e,Rn(t)):t=null,null===i?t:null===t?i:[i,t]}},lr={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function sr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!lr[e.type]:"textarea"===t}var cr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function fr(e,t,n){return(e=Qn.getPooled(cr.change,e,t,n)).type="change",I(n),Rn(e),e}var dr=null,pr=null;function hr(e){at(e)}function yr(e){if(xe(On(e)))return e}function vr(e,t){if("change"===e)return t}var mr=!1;function br(){dr&&(dr.detachEvent("onpropertychange",gr),pr=dr=null)}function gr(e){if("value"===e.propertyName&&yr(pr))if(e=fr(pr,e,lt(e)),F)at(e);else{F=!0;try{j(hr,e)}finally{F=!1,U()}}}function wr(e,t,n){"focus"===e?(br(),pr=n,(dr=t).attachEvent("onpropertychange",gr)):"blur"===e&&br()}function xr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return yr(pr)}function _r(e,t){if("click"===e)return yr(t)}function Er(e,t){if("input"===e||"change"===e)return yr(t)}P&&(mr=st("input")&&(!document.documentMode||9<document.documentMode));var kr={eventTypes:cr,_isInputEventSupported:mr,extractEvents:function(e,t,n,r){var i=t?On(t):window,o=i.nodeName&&i.nodeName.toLowerCase();if("select"===o||"input"===o&&"file"===i.type)var u=vr;else if(sr(i))if(mr)u=Er;else{u=xr;var a=wr}else(o=i.nodeName)&&"input"===o.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(u=_r);if(u&&(u=u(e,t)))return fr(u,n,r);a&&a(e,i,t),"blur"===e&&(e=i._wrapperState)&&e.controlled&&"number"===i.type&&Pe(i,"number",i.value)}},Sr=Qn.extend({view:null,detail:null}),Tr={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Pr(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Tr[e])&&!!t[e]}function Cr(){return Pr}var Or=0,Nr=0,Mr=!1,Ir=!1,zr=Sr.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Cr,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Or;return Or=e.screenX,Mr?"mousemove"===e.type?e.screenX-t:0:(Mr=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Nr;return Nr=e.screenY,Ir?"mousemove"===e.type?e.screenY-t:0:(Ir=!0,0)}}),jr=zr.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Dr={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Ar={eventTypes:Dr,extractEvents:function(e,t,n,r,i){var o="mouseover"===e||"pointerover"===e,u="mouseout"===e||"pointerout"===e;if(o&&0==(32&i)&&(n.relatedTarget||n.fromElement)||!u&&!o)return null;(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,u)?(u=t,null!==(t=(t=n.relatedTarget||n.toElement)?Pn(t):null)&&(t!==Ze(t)||5!==t.tag&&6!==t.tag)&&(t=null)):u=null;if(u===t)return null;if("mouseout"===e||"mouseover"===e)var a=zr,l=Dr.mouseLeave,s=Dr.mouseEnter,c="mouse";else"pointerout"!==e&&"pointerover"!==e||(a=jr,l=Dr.pointerLeave,s=Dr.pointerEnter,c="pointer");if(e=null==u?o:On(u),o=null==t?o:On(t),(l=a.getPooled(l,u,n,r)).type=c+"leave",l.target=e,l.relatedTarget=o,(n=a.getPooled(s,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,c=t,(r=u)&&c)e:{for(s=c,u=0,e=a=r;e;e=Mn(e))u++;for(e=0,t=s;t;t=Mn(t))e++;for(;0<u-e;)a=Mn(a),u--;for(;0<e-u;)s=Mn(s),e--;for(;u--;){if(a===s||a===s.alternate)break e;a=Mn(a),s=Mn(s)}a=null}else a=null;for(s=a,a=[];r&&r!==s&&(null===(u=r.alternate)||u!==s);)a.push(r),r=Mn(r);for(r=[];c&&c!==s&&(null===(u=c.alternate)||u!==s);)r.push(c),c=Mn(c);for(c=0;c<a.length;c++)Dn(a[c],"bubbled",l);for(c=r.length;0<c--;)Dn(r[c],"captured",n);return 0==(64&i)?[l]:[l,n]}};var Rr="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},Fr=Object.prototype.hasOwnProperty;function Lr(e,t){if(Rr(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Fr.call(t,n[r])||!Rr(e[n[r]],t[n[r]]))return!1;return!0}var Ur=P&&"documentMode"in document&&11>=document.documentMode,Br={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Vr=null,Wr=null,Qr=null,Yr=!1;function Hr(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Yr||null==Vr||Vr!==cn(n)?null:("selectionStart"in(n=Vr)&&hn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Qr&&Lr(Qr,n)?null:(Qr=n,(e=Qn.getPooled(Br.select,Wr,e,t)).type="select",e.target=Vr,Rn(e),e))}var qr={eventTypes:Br,extractEvents:function(e,t,n,r,i,o){if(!(o=!(i=o||(r.window===r?r.document:9===r.nodeType?r:r.ownerDocument)))){e:{i=Je(i),o=S.onSelect;for(var u=0;u<o.length;u++)if(!i.has(o[u])){i=!1;break e}i=!0}o=!i}if(o)return null;switch(i=t?On(t):window,e){case"focus":(sr(i)||"true"===i.contentEditable)&&(Vr=i,Wr=t,Qr=null);break;case"blur":Qr=Wr=Vr=null;break;case"mousedown":Yr=!0;break;case"contextmenu":case"mouseup":case"dragend":return Yr=!1,Hr(n,r);case"selectionchange":if(Ur)break;case"keydown":case"keyup":return Hr(n,r)}return null}},$r=Qn.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Xr=Qn.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Kr=Sr.extend({relatedTarget:null});function Gr(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var Jr={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Zr={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},ei=Sr.extend({key:function(e){if(e.key){var t=Jr[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=Gr(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Zr[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Cr,charCode:function(e){return"keypress"===e.type?Gr(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?Gr(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),ti=zr.extend({dataTransfer:null}),ni=Sr.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Cr}),ri=Qn.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),ii=zr.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),oi={eventTypes:Rt,extractEvents:function(e,t,n,r){var i=Ft.get(e);if(!i)return null;switch(e){case"keypress":if(0===Gr(n))return null;case"keydown":case"keyup":e=ei;break;case"blur":case"focus":e=Kr;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=zr;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=ti;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=ni;break;case He:case qe:case $e:e=$r;break;case Xe:e=ri;break;case"scroll":e=Sr;break;case"wheel":e=ii;break;case"copy":case"cut":case"paste":e=Xr;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=jr;break;default:e=Qn}return Rn(t=e.getPooled(i,t,n,r)),t}};if(b)throw Error(u(101));b=Array.prototype.slice.call("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),w(),h=Nn,y=Cn,v=On,T({SimpleEventPlugin:oi,EnterLeaveEventPlugin:Ar,ChangeEventPlugin:kr,SelectEventPlugin:qr,BeforeInputEventPlugin:ar});var ui=[],ai=-1;function li(e){0>ai||(e.current=ui[ai],ui[ai]=null,ai--)}function si(e,t){ai++,ui[ai]=e.current,e.current=t}var ci={},fi={current:ci},di={current:!1},pi=ci;function hi(e,t){var n=e.type.contextTypes;if(!n)return ci;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i,o={};for(i in n)o[i]=t[i];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function yi(e){return null!=(e=e.childContextTypes)}function vi(){li(di),li(fi)}function mi(e,t,n){if(fi.current!==ci)throw Error(u(168));si(fi,t),si(di,n)}function bi(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(u(108,ve(t)||"Unknown",o));return i({},n,{},r)}function gi(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ci,pi=fi.current,si(fi,e),si(di,di.current),!0}function wi(e,t,n){var r=e.stateNode;if(!r)throw Error(u(169));n?(e=bi(e,t,pi),r.__reactInternalMemoizedMergedChildContext=e,li(di),li(fi),si(fi,e)):li(di),si(di,n)}var xi=o.unstable_runWithPriority,_i=o.unstable_scheduleCallback,Ei=o.unstable_cancelCallback,ki=o.unstable_requestPaint,Si=o.unstable_now,Ti=o.unstable_getCurrentPriorityLevel,Pi=o.unstable_ImmediatePriority,Ci=o.unstable_UserBlockingPriority,Oi=o.unstable_NormalPriority,Ni=o.unstable_LowPriority,Mi=o.unstable_IdlePriority,Ii={},zi=o.unstable_shouldYield,ji=void 0!==ki?ki:function(){},Di=null,Ai=null,Ri=!1,Fi=Si(),Li=1e4>Fi?Si:function(){return Si()-Fi};function Ui(){switch(Ti()){case Pi:return 99;case Ci:return 98;case Oi:return 97;case Ni:return 96;case Mi:return 95;default:throw Error(u(332))}}function Bi(e){switch(e){case 99:return Pi;case 98:return Ci;case 97:return Oi;case 96:return Ni;case 95:return Mi;default:throw Error(u(332))}}function Vi(e,t){return e=Bi(e),xi(e,t)}function Wi(e,t,n){return e=Bi(e),_i(e,t,n)}function Qi(e){return null===Di?(Di=[e],Ai=_i(Pi,Hi)):Di.push(e),Ii}function Yi(){if(null!==Ai){var e=Ai;Ai=null,Ei(e)}Hi()}function Hi(){if(!Ri&&null!==Di){Ri=!0;var e=0;try{var t=Di;Vi(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Di=null}catch(t){throw null!==Di&&(Di=Di.slice(e+1)),_i(Pi,Yi),t}finally{Ri=!1}}}function qi(e,t,n){return 1073741821-(1+((1073741821-e+t/10)/(n/=10)|0))*n}function $i(e,t){if(e&&e.defaultProps)for(var n in t=i({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var Xi={current:null},Ki=null,Gi=null,Ji=null;function Zi(){Ji=Gi=Ki=null}function eo(e){var t=Xi.current;li(Xi),e.type._context._currentValue=t}function to(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function no(e,t){Ki=e,Ji=Gi=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Nu=!0),e.firstContext=null)}function ro(e,t){if(Ji!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Ji=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Gi){if(null===Ki)throw Error(u(308));Gi=t,Ki.dependencies={expirationTime:0,firstContext:t,responders:null}}else Gi=Gi.next=t;return e._currentValue}var io=!1;function oo(e){e.updateQueue={baseState:e.memoizedState,baseQueue:null,shared:{pending:null},effects:null}}function uo(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,baseQueue:e.baseQueue,shared:e.shared,effects:e.effects})}function ao(e,t){return(e={expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null}).next=e}function lo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function so(e,t){var n=e.alternate;null!==n&&uo(n,e),null===(n=(e=e.updateQueue).baseQueue)?(e.baseQueue=t.next=t,t.next=t):(t.next=n.next,n.next=t)}function co(e,t,n,r){var o=e.updateQueue;io=!1;var u=o.baseQueue,a=o.shared.pending;if(null!==a){if(null!==u){var l=u.next;u.next=a.next,a.next=l}u=a,o.shared.pending=null,null!==(l=e.alternate)&&(null!==(l=l.updateQueue)&&(l.baseQueue=a))}if(null!==u){l=u.next;var s=o.baseState,c=0,f=null,d=null,p=null;if(null!==l)for(var h=l;;){if((a=h.expirationTime)<r){var y={expirationTime:h.expirationTime,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null};null===p?(d=p=y,f=s):p=p.next=y,a>c&&(c=a)}else{null!==p&&(p=p.next={expirationTime:1073741823,suspenseConfig:h.suspenseConfig,tag:h.tag,payload:h.payload,callback:h.callback,next:null}),ol(a,h.suspenseConfig);e:{var v=e,m=h;switch(a=t,y=n,m.tag){case 1:if("function"==typeof(v=m.payload)){s=v.call(y,s,a);break e}s=v;break e;case 3:v.effectTag=-4097&v.effectTag|64;case 0:if(null==(a="function"==typeof(v=m.payload)?v.call(y,s,a):v))break e;s=i({},s,a);break e;case 2:io=!0}}null!==h.callback&&(e.effectTag|=32,null===(a=o.effects)?o.effects=[h]:a.push(h))}if(null===(h=h.next)||h===l){if(null===(a=o.shared.pending))break;h=u.next=a.next,a.next=l,o.baseQueue=u=a,o.shared.pending=null}}null===p?f=s:p.next=d,o.baseState=f,o.baseQueue=p,ul(c),e.expirationTime=c,e.memoizedState=s}}function fo(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(null!==i){if(r.callback=null,r=i,i=n,"function"!=typeof r)throw Error(u(191,r));r.call(i)}}}var po=K.ReactCurrentBatchConfig,ho=(new r.Component).refs;function yo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:i({},t,n),e.memoizedState=n,0===e.expirationTime&&(e.updateQueue.baseState=n)}var vo={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ze(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ha(),i=po.suspense;(i=ao(r=qa(r,e,i),i)).payload=t,null!=n&&(i.callback=n),lo(e,i),$a(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ha(),i=po.suspense;(i=ao(r=qa(r,e,i),i)).tag=1,i.payload=t,null!=n&&(i.callback=n),lo(e,i),$a(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ha(),r=po.suspense;(r=ao(n=qa(n,e,r),r)).tag=2,null!=t&&(r.callback=t),lo(e,r),$a(e,n)}};function mo(e,t,n,r,i,o,u){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,u):!t.prototype||!t.prototype.isPureReactComponent||(!Lr(n,r)||!Lr(i,o))}function bo(e,t,n){var r=!1,i=ci,o=t.contextType;return"object"==typeof o&&null!==o?o=ro(o):(i=yi(t)?pi:fi.current,o=(r=null!=(r=t.contextTypes))?hi(e,i):ci),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=vo,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function go(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&vo.enqueueReplaceState(t,t.state,null)}function wo(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=ho,oo(e);var o=t.contextType;"object"==typeof o&&null!==o?i.context=ro(o):(o=yi(t)?pi:fi.current,i.context=hi(e,o)),co(e,n,i,r),i.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(yo(e,t,o,n),i.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof i.getSnapshotBeforeUpdate||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||(t=i.state,"function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount(),t!==i.state&&vo.enqueueReplaceState(i,i.state,null),co(e,n,i,r),i.state=e.memoizedState),"function"==typeof i.componentDidMount&&(e.effectTag|=4)}var xo=Array.isArray;function _o(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(u(309));var r=n.stateNode}if(!r)throw Error(u(147,e));var i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:((t=function(e){var t=r.refs;t===ho&&(t=r.refs={}),null===e?delete t[i]:t[i]=e})._stringRef=i,t)}if("string"!=typeof e)throw Error(u(284));if(!n._owner)throw Error(u(290,e))}return e}function Eo(e,t){if("textarea"!==e.type)throw Error(u(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,""))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function i(e,t){return(e=Tl(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Ol(n,e.mode,r)).return=e,t):((t=i(t,n)).return=e,t)}function s(e,t,n,r){return null!==t&&t.elementType===n.type?((r=i(t,n.props)).ref=_o(e,t,n),r.return=e,r):((r=Pl(n.type,n.key,n.props,null,e.mode,r)).ref=_o(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Nl(n,e.mode,r)).return=e,t):((t=i(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Cl(n,e.mode,r,o)).return=e,t):((t=i(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Ol(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ee:return(n=Pl(t.type,t.key,t.props,null,e.mode,n)).ref=_o(e,null,t),n.return=e,n;case te:return(t=Nl(t,e.mode,n)).return=e,t}if(xo(t)||ye(t))return(t=Cl(t,e.mode,n,null)).return=e,t;Eo(e,t)}return null}function p(e,t,n,r){var i=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==i?null:l(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ee:return n.key===i?n.type===ne?f(e,t,n.props.children,r,i):s(e,t,n,r):null;case te:return n.key===i?c(e,t,n,r):null}if(xo(n)||ye(n))return null!==i?null:f(e,t,n,r,null);Eo(e,n)}return null}function h(e,t,n,r,i){if("string"==typeof r||"number"==typeof r)return l(t,e=e.get(n)||null,""+r,i);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ee:return e=e.get(null===r.key?n:r.key)||null,r.type===ne?f(t,e,r.props.children,i,r.key):s(t,e,r,i);case te:return c(t,e=e.get(null===r.key?n:r.key)||null,r,i)}if(xo(r)||ye(r))return f(t,e=e.get(n)||null,r,i,null);Eo(t,r)}return null}function y(i,u,a,l){for(var s=null,c=null,f=u,y=u=0,v=null;null!==f&&y<a.length;y++){f.index>y?(v=f,f=null):v=f.sibling;var m=p(i,f,a[y],l);if(null===m){null===f&&(f=v);break}e&&f&&null===m.alternate&&t(i,f),u=o(m,u,y),null===c?s=m:c.sibling=m,c=m,f=v}if(y===a.length)return n(i,f),s;if(null===f){for(;y<a.length;y++)null!==(f=d(i,a[y],l))&&(u=o(f,u,y),null===c?s=f:c.sibling=f,c=f);return s}for(f=r(i,f);y<a.length;y++)null!==(v=h(f,i,y,a[y],l))&&(e&&null!==v.alternate&&f.delete(null===v.key?y:v.key),u=o(v,u,y),null===c?s=v:c.sibling=v,c=v);return e&&f.forEach((function(e){return t(i,e)})),s}function v(i,a,l,s){var c=ye(l);if("function"!=typeof c)throw Error(u(150));if(null==(l=c.call(l)))throw Error(u(151));for(var f=c=null,y=a,v=a=0,m=null,b=l.next();null!==y&&!b.done;v++,b=l.next()){y.index>v?(m=y,y=null):m=y.sibling;var g=p(i,y,b.value,s);if(null===g){null===y&&(y=m);break}e&&y&&null===g.alternate&&t(i,y),a=o(g,a,v),null===f?c=g:f.sibling=g,f=g,y=m}if(b.done)return n(i,y),c;if(null===y){for(;!b.done;v++,b=l.next())null!==(b=d(i,b.value,s))&&(a=o(b,a,v),null===f?c=b:f.sibling=b,f=b);return c}for(y=r(i,y);!b.done;v++,b=l.next())null!==(b=h(y,i,v,b.value,s))&&(e&&null!==b.alternate&&y.delete(null===b.key?v:b.key),a=o(b,a,v),null===f?c=b:f.sibling=b,f=b);return e&&y.forEach((function(e){return t(i,e)})),c}return function(e,r,o,l){var s="object"==typeof o&&null!==o&&o.type===ne&&null===o.key;s&&(o=o.props.children);var c="object"==typeof o&&null!==o;if(c)switch(o.$$typeof){case ee:e:{for(c=o.key,s=r;null!==s;){if(s.key===c){switch(s.tag){case 7:if(o.type===ne){n(e,s.sibling),(r=i(s,o.props.children)).return=e,e=r;break e}break;default:if(s.elementType===o.type){n(e,s.sibling),(r=i(s,o.props)).ref=_o(e,s,o),r.return=e,e=r;break e}}n(e,s);break}t(e,s),s=s.sibling}o.type===ne?((r=Cl(o.props.children,e.mode,l,o.key)).return=e,e=r):((l=Pl(o.type,o.key,o.props,null,e.mode,l)).ref=_o(e,r,o),l.return=e,e=l)}return a(e);case te:e:{for(s=o.key;null!==r;){if(r.key===s){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=i(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Nl(o,e.mode,l)).return=e,e=r}return a(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=i(r,o)).return=e,e=r):(n(e,r),(r=Ol(o,e.mode,l)).return=e,e=r),a(e);if(xo(o))return y(e,r,o,l);if(ye(o))return v(e,r,o,l);if(c&&Eo(e,o),void 0===o&&!s)switch(e.tag){case 1:case 0:throw e=e.type,Error(u(152,e.displayName||e.name||"Component"))}return n(e,r)}}var So=ko(!0),To=ko(!1),Po={},Co={current:Po},Oo={current:Po},No={current:Po};function Mo(e){if(e===Po)throw Error(u(174));return e}function Io(e,t){switch(si(No,t),si(Oo,e),si(Co,Po),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Re(null,"");break;default:t=Re(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}li(Co),si(Co,t)}function zo(){li(Co),li(Oo),li(No)}function jo(e){Mo(No.current);var t=Mo(Co.current),n=Re(t,e.type);t!==n&&(si(Oo,e),si(Co,n))}function Do(e){Oo.current===e&&(li(Co),li(Oo))}var Ao={current:0};function Ro(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.effectTag))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Fo(e,t){return{responder:e,props:t}}var Lo=K.ReactCurrentDispatcher,Uo=K.ReactCurrentBatchConfig,Bo=0,Vo=null,Wo=null,Qo=null,Yo=!1;function Ho(){throw Error(u(321))}function qo(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Rr(e[n],t[n]))return!1;return!0}function $o(e,t,n,r,i,o){if(Bo=o,Vo=t,t.memoizedState=null,t.updateQueue=null,t.expirationTime=0,Lo.current=null===e||null===e.memoizedState?mu:bu,e=n(r,i),t.expirationTime===Bo){o=0;do{if(t.expirationTime=0,!(25>o))throw Error(u(301));o+=1,Qo=Wo=null,t.updateQueue=null,Lo.current=gu,e=n(r,i)}while(t.expirationTime===Bo)}if(Lo.current=vu,t=null!==Wo&&null!==Wo.next,Bo=0,Qo=Wo=Vo=null,Yo=!1,t)throw Error(u(300));return e}function Xo(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Qo?Vo.memoizedState=Qo=e:Qo=Qo.next=e,Qo}function Ko(){if(null===Wo){var e=Vo.alternate;e=null!==e?e.memoizedState:null}else e=Wo.next;var t=null===Qo?Vo.memoizedState:Qo.next;if(null!==t)Qo=t,Wo=e;else{if(null===e)throw Error(u(310));e={memoizedState:(Wo=e).memoizedState,baseState:Wo.baseState,baseQueue:Wo.baseQueue,queue:Wo.queue,next:null},null===Qo?Vo.memoizedState=Qo=e:Qo=Qo.next=e}return Qo}function Go(e,t){return"function"==typeof t?t(e):t}function Jo(e){var t=Ko(),n=t.queue;if(null===n)throw Error(u(311));n.lastRenderedReducer=e;var r=Wo,i=r.baseQueue,o=n.pending;if(null!==o){if(null!==i){var a=i.next;i.next=o.next,o.next=a}r.baseQueue=i=o,n.pending=null}if(null!==i){i=i.next,r=r.baseState;var l=a=o=null,s=i;do{var c=s.expirationTime;if(c<Bo){var f={expirationTime:s.expirationTime,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null};null===l?(a=l=f,o=r):l=l.next=f,c>Vo.expirationTime&&(Vo.expirationTime=c,ul(c))}else null!==l&&(l=l.next={expirationTime:1073741823,suspenseConfig:s.suspenseConfig,action:s.action,eagerReducer:s.eagerReducer,eagerState:s.eagerState,next:null}),ol(c,s.suspenseConfig),r=s.eagerReducer===e?s.eagerState:e(r,s.action);s=s.next}while(null!==s&&s!==i);null===l?o=r:l.next=a,Rr(r,t.memoizedState)||(Nu=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=l,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function Zo(e){var t=Ko(),n=t.queue;if(null===n)throw Error(u(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(null!==i){n.pending=null;var a=i=i.next;do{o=e(o,a.action),a=a.next}while(a!==i);Rr(o,t.memoizedState)||(Nu=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function eu(e){var t=Xo();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:Go,lastRenderedState:e}).dispatch=yu.bind(null,Vo,e),[t.memoizedState,e]}function tu(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Vo.updateQueue)?(t={lastEffect:null},Vo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function nu(){return Ko().memoizedState}function ru(e,t,n,r){var i=Xo();Vo.effectTag|=e,i.memoizedState=tu(1|t,n,void 0,void 0===r?null:r)}function iu(e,t,n,r){var i=Ko();r=void 0===r?null:r;var o=void 0;if(null!==Wo){var u=Wo.memoizedState;if(o=u.destroy,null!==r&&qo(r,u.deps))return void tu(t,n,o,r)}Vo.effectTag|=e,i.memoizedState=tu(1|t,n,o,r)}function ou(e,t){return ru(516,4,e,t)}function uu(e,t){return iu(516,4,e,t)}function au(e,t){return iu(4,2,e,t)}function lu(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function su(e,t,n){return n=null!=n?n.concat([e]):null,iu(4,2,lu.bind(null,t,e),n)}function cu(){}function fu(e,t){return Xo().memoizedState=[e,void 0===t?null:t],e}function du(e,t){var n=Ko();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qo(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function pu(e,t){var n=Ko();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&qo(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function hu(e,t,n){var r=Ui();Vi(98>r?98:r,(function(){e(!0)})),Vi(97<r?97:r,(function(){var r=Uo.suspense;Uo.suspense=void 0===t?null:t;try{e(!1),n()}finally{Uo.suspense=r}}))}function yu(e,t,n){var r=Ha(),i=po.suspense;i={expirationTime:r=qa(r,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.pending;if(null===o?i.next=i:(i.next=o.next,o.next=i),t.pending=i,o=e.alternate,e===Vo||null!==o&&o===Vo)Yo=!0,i.expirationTime=Bo,Vo.expirationTime=Bo;else{if(0===e.expirationTime&&(null===o||0===o.expirationTime)&&null!==(o=t.lastRenderedReducer))try{var u=t.lastRenderedState,a=o(u,n);if(i.eagerReducer=o,i.eagerState=a,Rr(a,u))return}catch(e){}$a(e,r)}}var vu={readContext:ro,useCallback:Ho,useContext:Ho,useEffect:Ho,useImperativeHandle:Ho,useLayoutEffect:Ho,useMemo:Ho,useReducer:Ho,useRef:Ho,useState:Ho,useDebugValue:Ho,useResponder:Ho,useDeferredValue:Ho,useTransition:Ho},mu={readContext:ro,useCallback:fu,useContext:ro,useEffect:ou,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ru(4,2,lu.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ru(4,2,e,t)},useMemo:function(e,t){var n=Xo();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Xo();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=yu.bind(null,Vo,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Xo().memoizedState=e},useState:eu,useDebugValue:cu,useResponder:Fo,useDeferredValue:function(e,t){var n=eu(e),r=n[0],i=n[1];return ou((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{i(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=eu(!1),n=t[0];return t=t[1],[fu(hu.bind(null,t,e),[t,e]),n]}},bu={readContext:ro,useCallback:du,useContext:ro,useEffect:uu,useImperativeHandle:su,useLayoutEffect:au,useMemo:pu,useReducer:Jo,useRef:nu,useState:function(){return Jo(Go)},useDebugValue:cu,useResponder:Fo,useDeferredValue:function(e,t){var n=Jo(Go),r=n[0],i=n[1];return uu((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{i(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Jo(Go),n=t[0];return t=t[1],[du(hu.bind(null,t,e),[t,e]),n]}},gu={readContext:ro,useCallback:du,useContext:ro,useEffect:uu,useImperativeHandle:su,useLayoutEffect:au,useMemo:pu,useReducer:Zo,useRef:nu,useState:function(){return Zo(Go)},useDebugValue:cu,useResponder:Fo,useDeferredValue:function(e,t){var n=Zo(Go),r=n[0],i=n[1];return uu((function(){var n=Uo.suspense;Uo.suspense=void 0===t?null:t;try{i(e)}finally{Uo.suspense=n}}),[e,t]),r},useTransition:function(e){var t=Zo(Go),n=t[0];return t=t[1],[du(hu.bind(null,t,e),[t,e]),n]}},wu=null,xu=null,_u=!1;function Eu(e,t){var n=kl(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function ku(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Su(e){if(_u){var t=xu;if(t){var n=t;if(!ku(e,t)){if(!(t=xn(n.nextSibling))||!ku(e,t))return e.effectTag=-1025&e.effectTag|2,_u=!1,void(wu=e);Eu(wu,n)}wu=e,xu=xn(t.firstChild)}else e.effectTag=-1025&e.effectTag|2,_u=!1,wu=e}}function Tu(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;wu=e}function Pu(e){if(e!==wu)return!1;if(!_u)return Tu(e),_u=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!bn(t,e.memoizedProps))for(t=xu;t;)Eu(e,t),t=xn(t.nextSibling);if(Tu(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(u(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){xu=xn(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}xu=null}}else xu=wu?xn(e.stateNode.nextSibling):null;return!0}function Cu(){xu=wu=null,_u=!1}var Ou=K.ReactCurrentOwner,Nu=!1;function Mu(e,t,n,r){t.child=null===e?To(t,null,n,r):So(t,e.child,n,r)}function Iu(e,t,n,r,i){n=n.render;var o=t.ref;return no(t,i),r=$o(e,t,n,r,o,i),null===e||Nu?(t.effectTag|=1,Mu(e,t,r,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),$u(e,t,i))}function zu(e,t,n,r,i,o){if(null===e){var u=n.type;return"function"!=typeof u||Sl(u)||void 0!==u.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Pl(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=u,ju(e,t,u,r,i,o))}return u=e.child,i<o&&(i=u.memoizedProps,(n=null!==(n=n.compare)?n:Lr)(i,r)&&e.ref===t.ref)?$u(e,t,o):(t.effectTag|=1,(e=Tl(u,r)).ref=t.ref,e.return=t,t.child=e)}function ju(e,t,n,r,i,o){return null!==e&&Lr(e.memoizedProps,r)&&e.ref===t.ref&&(Nu=!1,i<o)?(t.expirationTime=e.expirationTime,$u(e,t,o)):Au(e,t,n,r,o)}function Du(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Au(e,t,n,r,i){var o=yi(n)?pi:fi.current;return o=hi(t,o),no(t,i),n=$o(e,t,n,r,o,i),null===e||Nu?(t.effectTag|=1,Mu(e,t,n,i),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=i&&(e.expirationTime=0),$u(e,t,i))}function Ru(e,t,n,r,i){if(yi(n)){var o=!0;gi(t)}else o=!1;if(no(t,i),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),bo(t,n,r),wo(t,n,r,i),r=!0;else if(null===e){var u=t.stateNode,a=t.memoizedProps;u.props=a;var l=u.context,s=n.contextType;"object"==typeof s&&null!==s?s=ro(s):s=hi(t,s=yi(n)?pi:fi.current);var c=n.getDerivedStateFromProps,f="function"==typeof c||"function"==typeof u.getSnapshotBeforeUpdate;f||"function"!=typeof u.UNSAFE_componentWillReceiveProps&&"function"!=typeof u.componentWillReceiveProps||(a!==r||l!==s)&&go(t,u,r,s),io=!1;var d=t.memoizedState;u.state=d,co(t,r,u,i),l=t.memoizedState,a!==r||d!==l||di.current||io?("function"==typeof c&&(yo(t,n,c,r),l=t.memoizedState),(a=io||mo(t,n,a,r,d,l,s))?(f||"function"!=typeof u.UNSAFE_componentWillMount&&"function"!=typeof u.componentWillMount||("function"==typeof u.componentWillMount&&u.componentWillMount(),"function"==typeof u.UNSAFE_componentWillMount&&u.UNSAFE_componentWillMount()),"function"==typeof u.componentDidMount&&(t.effectTag|=4)):("function"==typeof u.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),u.props=r,u.state=l,u.context=s,r=a):("function"==typeof u.componentDidMount&&(t.effectTag|=4),r=!1)}else u=t.stateNode,uo(e,t),a=t.memoizedProps,u.props=t.type===t.elementType?a:$i(t.type,a),l=u.context,"object"==typeof(s=n.contextType)&&null!==s?s=ro(s):s=hi(t,s=yi(n)?pi:fi.current),(f="function"==typeof(c=n.getDerivedStateFromProps)||"function"==typeof u.getSnapshotBeforeUpdate)||"function"!=typeof u.UNSAFE_componentWillReceiveProps&&"function"!=typeof u.componentWillReceiveProps||(a!==r||l!==s)&&go(t,u,r,s),io=!1,l=t.memoizedState,u.state=l,co(t,r,u,i),d=t.memoizedState,a!==r||l!==d||di.current||io?("function"==typeof c&&(yo(t,n,c,r),d=t.memoizedState),(c=io||mo(t,n,a,r,l,d,s))?(f||"function"!=typeof u.UNSAFE_componentWillUpdate&&"function"!=typeof u.componentWillUpdate||("function"==typeof u.componentWillUpdate&&u.componentWillUpdate(r,d,s),"function"==typeof u.UNSAFE_componentWillUpdate&&u.UNSAFE_componentWillUpdate(r,d,s)),"function"==typeof u.componentDidUpdate&&(t.effectTag|=4),"function"==typeof u.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof u.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof u.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),u.props=r,u.state=d,u.context=s,r=c):("function"!=typeof u.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!=typeof u.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return Fu(e,t,n,r,o,i)}function Fu(e,t,n,r,i,o){Du(e,t);var u=0!=(64&t.effectTag);if(!r&&!u)return i&&wi(t,n,!1),$u(e,t,o);r=t.stateNode,Ou.current=t;var a=u&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&u?(t.child=So(t,e.child,null,o),t.child=So(t,null,a,o)):Mu(e,t,a,o),t.memoizedState=r.state,i&&wi(t,n,!0),t.child}function Lu(e){var t=e.stateNode;t.pendingContext?mi(0,t.pendingContext,t.pendingContext!==t.context):t.context&&mi(0,t.context,!1),Io(e,t.containerInfo)}var Uu,Bu,Vu,Wu={dehydrated:null,retryTime:0};function Qu(e,t,n){var r,i=t.mode,o=t.pendingProps,u=Ao.current,a=!1;if((r=0!=(64&t.effectTag))||(r=0!=(2&u)&&(null===e||null!==e.memoizedState)),r?(a=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===o.fallback||!0===o.unstable_avoidThisFallback||(u|=1),si(Ao,1&u),null===e){if(void 0!==o.fallback&&Su(t),a){if(a=o.fallback,(o=Cl(null,i,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Cl(a,i,n,null)).return=t,o.sibling=n,t.memoizedState=Wu,t.child=o,n}return i=o.children,t.memoizedState=null,t.child=To(t,null,i,n)}if(null!==e.memoizedState){if(i=(e=e.child).sibling,a){if(o=o.fallback,(n=Tl(e,e.pendingProps)).return=t,0==(2&t.mode)&&(a=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=a;null!==a;)a.return=n,a=a.sibling;return(i=Tl(i,o)).return=t,n.sibling=i,n.childExpirationTime=0,t.memoizedState=Wu,t.child=n,i}return n=So(t,e.child,o.children,n),t.memoizedState=null,t.child=n}if(e=e.child,a){if(a=o.fallback,(o=Cl(null,i,0,null)).return=t,o.child=e,null!==e&&(e.return=o),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,o.child=e;null!==e;)e.return=o,e=e.sibling;return(n=Cl(a,i,n,null)).return=t,o.sibling=n,n.effectTag|=2,o.childExpirationTime=0,t.memoizedState=Wu,t.child=o,n}return t.memoizedState=null,t.child=So(t,e,o.children,n)}function Yu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t),to(e.return,t)}function Hu(e,t,n,r,i,o){var u=e.memoizedState;null===u?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailExpiration:0,tailMode:i,lastEffect:o}:(u.isBackwards=t,u.rendering=null,u.renderingStartTime=0,u.last=r,u.tail=n,u.tailExpiration=0,u.tailMode=i,u.lastEffect=o)}function qu(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(Mu(e,t,r.children,n),0!=(2&(r=Ao.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&0!=(64&e.effectTag))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yu(e,n);else if(19===e.tag)Yu(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(si(Ao,r),0==(2&t.mode))t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;null!==n;)null!==(e=n.alternate)&&null===Ro(e)&&(i=n),n=n.sibling;null===(n=i)?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),Hu(t,!1,i,n,o,t.lastEffect);break;case"backwards":for(n=null,i=t.child,t.child=null;null!==i;){if(null!==(e=i.alternate)&&null===Ro(e)){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}Hu(t,!0,n,null,o,t.lastEffect);break;case"together":Hu(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function $u(e,t,n){null!==e&&(t.dependencies=e.dependencies);var r=t.expirationTime;if(0!==r&&ul(r),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw Error(u(153));if(null!==t.child){for(n=Tl(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Tl(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Xu(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ku(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return yi(t.type)&&vi(),null;case 3:return zo(),li(di),li(fi),(n=t.stateNode).pendingContext&&(n.context=n.pendingContext,n.pendingContext=null),null!==e&&null!==e.child||!Pu(t)||(t.effectTag|=4),null;case 5:Do(t),n=Mo(No.current);var o=t.type;if(null!==e&&null!=t.stateNode)Bu(e,t,o,r,n),e.ref!==t.ref&&(t.effectTag|=128);else{if(!r){if(null===t.stateNode)throw Error(u(166));return null}if(e=Mo(Co.current),Pu(t)){r=t.stateNode,o=t.type;var a=t.memoizedProps;switch(r[kn]=t,r[Sn]=a,o){case"iframe":case"object":case"embed":qt("load",r);break;case"video":case"audio":for(e=0;e<Ke.length;e++)qt(Ke[e],r);break;case"source":qt("error",r);break;case"img":case"image":case"link":qt("error",r),qt("load",r);break;case"form":qt("reset",r),qt("submit",r);break;case"details":qt("toggle",r);break;case"input":Ee(r,a),qt("invalid",r),ln(n,"onChange");break;case"select":r._wrapperState={wasMultiple:!!a.multiple},qt("invalid",r),ln(n,"onChange");break;case"textarea":Me(r,a),qt("invalid",r),ln(n,"onChange")}for(var l in on(o,a),e=null,a)if(a.hasOwnProperty(l)){var s=a[l];"children"===l?"string"==typeof s?r.textContent!==s&&(e=["children",s]):"number"==typeof s&&r.textContent!==""+s&&(e=["children",""+s]):k.hasOwnProperty(l)&&null!=s&&ln(n,l)}switch(o){case"input":we(r),Te(r,a,!0);break;case"textarea":we(r),ze(r);break;case"select":case"option":break;default:"function"==typeof a.onClick&&(r.onclick=sn)}n=e,t.updateQueue=n,null!==n&&(t.effectTag|=4)}else{switch(l=9===n.nodeType?n:n.ownerDocument,e===an&&(e=Ae(o)),e===an?"script"===o?((e=l.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=l.createElement(o,{is:r.is}):(e=l.createElement(o),"select"===o&&(l=e,r.multiple?l.multiple=!0:r.size&&(l.size=r.size))):e=l.createElementNS(e,o),e[kn]=t,e[Sn]=r,Uu(e,t),t.stateNode=e,l=un(o,r),o){case"iframe":case"object":case"embed":qt("load",e),s=r;break;case"video":case"audio":for(s=0;s<Ke.length;s++)qt(Ke[s],e);s=r;break;case"source":qt("error",e),s=r;break;case"img":case"image":case"link":qt("error",e),qt("load",e),s=r;break;case"form":qt("reset",e),qt("submit",e),s=r;break;case"details":qt("toggle",e),s=r;break;case"input":Ee(e,r),s=_e(e,r),qt("invalid",e),ln(n,"onChange");break;case"option":s=Ce(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},s=i({},r,{value:void 0}),qt("invalid",e),ln(n,"onChange");break;case"textarea":Me(e,r),s=Ne(e,r),qt("invalid",e),ln(n,"onChange");break;default:s=r}on(o,s);var c=s;for(a in c)if(c.hasOwnProperty(a)){var f=c[a];"style"===a?nn(e,f):"dangerouslySetInnerHTML"===a?null!=(f=f?f.__html:void 0)&&Le(e,f):"children"===a?"string"==typeof f?("textarea"!==o||""!==f)&&Ue(e,f):"number"==typeof f&&Ue(e,""+f):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(k.hasOwnProperty(a)?null!=f&&ln(n,a):null!=f&&G(e,a,f,l))}switch(o){case"input":we(e),Te(e,r,!1);break;case"textarea":we(e),ze(e);break;case"option":null!=r.value&&e.setAttribute("value",""+be(r.value));break;case"select":e.multiple=!!r.multiple,null!=(n=r.value)?Oe(e,!!r.multiple,n,!1):null!=r.defaultValue&&Oe(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof s.onClick&&(e.onclick=sn)}mn(o,r)&&(t.effectTag|=4)}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)Vu(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(u(166));n=Mo(No.current),Mo(Co.current),Pu(t)?(n=t.stateNode,r=t.memoizedProps,n[kn]=t,n.nodeValue!==r&&(t.effectTag|=4)):((n=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[kn]=t,t.stateNode=n)}return null;case 13:return li(Ao),r=t.memoizedState,0!=(64&t.effectTag)?(t.expirationTime=n,t):(n=null!==r,r=!1,null===e?void 0!==t.memoizedProps.fallback&&Pu(t):(r=null!==(o=e.memoizedState),n||null===o||null!==(o=e.child.sibling)&&(null!==(a=t.firstEffect)?(t.firstEffect=o,o.nextEffect=a):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),n&&!r&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Ao.current)?Pa===wa&&(Pa=xa):(Pa!==wa&&Pa!==xa||(Pa=_a),0!==Ia&&null!==ka&&(zl(ka,Ta),jl(ka,Ia)))),(n||r)&&(t.effectTag|=4),null);case 4:return zo(),null;case 10:return eo(t),null;case 17:return yi(t.type)&&vi(),null;case 19:if(li(Ao),null===(r=t.memoizedState))return null;if(o=0!=(64&t.effectTag),null===(a=r.rendering)){if(o)Xu(r,!1);else if(Pa!==wa||null!==e&&0!=(64&e.effectTag))for(a=t.child;null!==a;){if(null!==(e=Ro(a))){for(t.effectTag|=64,Xu(r,!1),null!==(o=e.updateQueue)&&(t.updateQueue=o,t.effectTag|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=t.child;null!==r;)a=n,(o=r).effectTag&=2,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(e=o.alternate)?(o.childExpirationTime=0,o.expirationTime=a,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=e.childExpirationTime,o.expirationTime=e.expirationTime,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,a=e.dependencies,o.dependencies=null===a?null:{expirationTime:a.expirationTime,firstContext:a.firstContext,responders:a.responders}),r=r.sibling;return si(Ao,1&Ao.current|2),t.child}a=a.sibling}}else{if(!o)if(null!==(e=Ro(a))){if(t.effectTag|=64,o=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.effectTag|=4),Xu(r,!0),null===r.tail&&"hidden"===r.tailMode&&!a.alternate)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Li()-r.renderingStartTime>r.tailExpiration&&1<n&&(t.effectTag|=64,o=!0,Xu(r,!1),t.expirationTime=t.childExpirationTime=n-1);r.isBackwards?(a.sibling=t.child,t.child=a):(null!==(n=r.last)?n.sibling=a:t.child=a,r.last=a)}return null!==r.tail?(0===r.tailExpiration&&(r.tailExpiration=Li()+500),n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Li(),n.sibling=null,t=Ao.current,si(Ao,o?1&t|2:1&t),n):null}throw Error(u(156,t.tag))}function Gu(e){switch(e.tag){case 1:yi(e.type)&&vi();var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if(zo(),li(di),li(fi),0!=(64&(t=e.effectTag)))throw Error(u(285));return e.effectTag=-4097&t|64,e;case 5:return Do(e),null;case 13:return li(Ao),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return li(Ao),null;case 4:return zo(),null;case 10:return eo(e),null;default:return null}}function Ju(e,t){return{value:e,source:t,stack:me(t)}}Uu=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Bu=function(e,t,n,r,o){var u=e.memoizedProps;if(u!==r){var a,l,s=t.stateNode;switch(Mo(Co.current),e=null,n){case"input":u=_e(s,u),r=_e(s,r),e=[];break;case"option":u=Ce(s,u),r=Ce(s,r),e=[];break;case"select":u=i({},u,{value:void 0}),r=i({},r,{value:void 0}),e=[];break;case"textarea":u=Ne(s,u),r=Ne(s,r),e=[];break;default:"function"!=typeof u.onClick&&"function"==typeof r.onClick&&(s.onclick=sn)}for(a in on(n,r),n=null,u)if(!r.hasOwnProperty(a)&&u.hasOwnProperty(a)&&null!=u[a])if("style"===a)for(l in s=u[a])s.hasOwnProperty(l)&&(n||(n={}),n[l]="");else"dangerouslySetInnerHTML"!==a&&"children"!==a&&"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&"autoFocus"!==a&&(k.hasOwnProperty(a)?e||(e=[]):(e=e||[]).push(a,null));for(a in r){var c=r[a];if(s=null!=u?u[a]:void 0,r.hasOwnProperty(a)&&c!==s&&(null!=c||null!=s))if("style"===a)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(e||(e=[]),e.push(a,n)),n=c;else"dangerouslySetInnerHTML"===a?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(e=e||[]).push(a,c)):"children"===a?s===c||"string"!=typeof c&&"number"!=typeof c||(e=e||[]).push(a,""+c):"suppressContentEditableWarning"!==a&&"suppressHydrationWarning"!==a&&(k.hasOwnProperty(a)?(null!=c&&ln(o,a),e||s===c||(e=[])):(e=e||[]).push(a,c))}n&&(e=e||[]).push("style",n),o=e,(t.updateQueue=o)&&(t.effectTag|=4)}},Vu=function(e,t,n,r){n!==r&&(t.effectTag|=4)};var Zu="function"==typeof WeakSet?WeakSet:Set;function ea(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=me(n)),null!==n&&ve(n.type),t=t.value,null!==e&&1===e.tag&&ve(e.type);try{console.error(t)}catch(e){setTimeout((function(){throw e}))}}function ta(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){bl(e,t)}else t.current=null}function na(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:$i(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:case 5:case 6:case 4:case 17:return}throw Error(u(163))}function ra(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.destroy;n.destroy=void 0,void 0!==r&&r()}n=n.next}while(n!==t)}}function ia(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function oa(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:return void ia(3,n);case 1:if(e=n.stateNode,4&n.effectTag)if(null===t)e.componentDidMount();else{var r=n.elementType===n.type?t.memoizedProps:$i(n.type,t.memoizedProps);e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate)}return void(null!==(t=n.updateQueue)&&fo(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}fo(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.effectTag&&mn(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&At(n)))));case 19:case 17:case 20:case 21:return}throw Error(u(163))}function ua(e,t,n){switch("function"==typeof _l&&_l(t),t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Vi(97<n?97:n,(function(){var e=r;do{var n=e.destroy;if(void 0!==n){var i=t;try{n()}catch(e){bl(i,e)}}e=e.next}while(e!==r)}))}break;case 1:ta(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&function(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){bl(e,t)}}(t,n);break;case 5:ta(t);break;case 4:ca(e,t,n)}}function aa(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,e.stateNode=null,null!==t&&aa(t)}function la(e){return 5===e.tag||3===e.tag||4===e.tag}function sa(e){e:{for(var t=e.return;null!==t;){if(la(t)){var n=t;break e}t=t.return}throw Error(u(160))}switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(u(161))}16&n.effectTag&&(Ue(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||la(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}r?function e(t,n,r){var i=t.tag,o=5===i||6===i;if(o)t=o?t.stateNode:t.stateNode.instance,n?8===r.nodeType?r.parentNode.insertBefore(t,n):r.insertBefore(t,n):(8===r.nodeType?(n=r.parentNode).insertBefore(t,r):(n=r).appendChild(t),null!==(r=r._reactRootContainer)&&void 0!==r||null!==n.onclick||(n.onclick=sn));else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t):function e(t,n,r){var i=t.tag,o=5===i||6===i;if(o)t=o?t.stateNode:t.stateNode.instance,n?r.insertBefore(t,n):r.appendChild(t);else if(4!==i&&null!==(t=t.child))for(e(t,n,r),t=t.sibling;null!==t;)e(t,n,r),t=t.sibling}(e,n,t)}function ca(e,t,n){for(var r,i,o=t,a=!1;;){if(!a){a=o.return;e:for(;;){if(null===a)throw Error(u(160));switch(r=a.stateNode,a.tag){case 5:i=!1;break e;case 3:case 4:r=r.containerInfo,i=!0;break e}a=a.return}a=!0}if(5===o.tag||6===o.tag){e:for(var l=e,s=o,c=n,f=s;;)if(ua(l,f,c),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===s)break e;for(;null===f.sibling;){if(null===f.return||f.return===s)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}i?(l=r,s=o.stateNode,8===l.nodeType?l.parentNode.removeChild(s):l.removeChild(s)):r.removeChild(o.stateNode)}else if(4===o.tag){if(null!==o.child){r=o.stateNode.containerInfo,i=!0,o.child.return=o,o=o.child;continue}}else if(ua(e,o,n),null!==o.child){o.child.return=o,o=o.child;continue}if(o===t)break;for(;null===o.sibling;){if(null===o.return||o.return===t)return;4===(o=o.return).tag&&(a=!1)}o.sibling.return=o.return,o=o.sibling}}function fa(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:return void ra(3,t);case 1:return;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps,i=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[Sn]=r,"input"===e&&"radio"===r.type&&null!=r.name&&ke(n,r),un(e,i),t=un(e,r),i=0;i<o.length;i+=2){var a=o[i],l=o[i+1];"style"===a?nn(n,l):"dangerouslySetInnerHTML"===a?Le(n,l):"children"===a?Ue(n,l):G(n,a,l,t)}switch(e){case"input":Se(n,r);break;case"textarea":Ie(n,r);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(e=r.value)?Oe(n,!!r.multiple,e,!1):t!==!!r.multiple&&(null!=r.defaultValue?Oe(n,!!r.multiple,r.defaultValue,!0):Oe(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(u(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((t=t.stateNode).hydrate&&(t.hydrate=!1,At(t.containerInfo)));case 12:return;case 13:if(n=t,null===t.memoizedState?r=!1:(r=!0,n=t.child,ja=Li()),null!==n)e:for(e=n;;){if(5===e.tag)o=e.stateNode,r?"function"==typeof(o=o.style).setProperty?o.setProperty("display","none","important"):o.display="none":(o=e.stateNode,i=null!=(i=e.memoizedProps.style)&&i.hasOwnProperty("display")?i.display:null,o.style.display=tn("display",i));else if(6===e.tag)e.stateNode.nodeValue=r?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(o=e.child.sibling).return=e,e=o;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}return void da(t);case 19:return void da(t);case 17:return}throw Error(u(163))}function da(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Zu),t.forEach((function(t){var r=wl.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}var pa="function"==typeof WeakMap?WeakMap:Map;function ha(e,t,n){(n=ao(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Aa||(Aa=!0,Ra=r),ea(e,t)},n}function ya(e,t,n){(n=ao(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var i=t.value;n.payload=function(){return ea(e,t),r(i)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Fa?Fa=new Set([this]):Fa.add(this),ea(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var va,ma=Math.ceil,ba=K.ReactCurrentDispatcher,ga=K.ReactCurrentOwner,wa=0,xa=3,_a=4,Ea=0,ka=null,Sa=null,Ta=0,Pa=wa,Ca=null,Oa=1073741823,Na=1073741823,Ma=null,Ia=0,za=!1,ja=0,Da=null,Aa=!1,Ra=null,Fa=null,La=!1,Ua=null,Ba=90,Va=null,Wa=0,Qa=null,Ya=0;function Ha(){return 0!=(48&Ea)?1073741821-(Li()/10|0):0!==Ya?Ya:Ya=1073741821-(Li()/10|0)}function qa(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var r=Ui();if(0==(4&t))return 99===r?1073741823:1073741822;if(0!=(16&Ea))return Ta;if(null!==n)e=qi(e,0|n.timeoutMs||5e3,250);else switch(r){case 99:e=1073741823;break;case 98:e=qi(e,150,100);break;case 97:case 96:e=qi(e,5e3,250);break;case 95:e=2;break;default:throw Error(u(326))}return null!==ka&&e===Ta&&--e,e}function $a(e,t){if(50<Wa)throw Wa=0,Qa=null,Error(u(185));if(null!==(e=Xa(e,t))){var n=Ui();1073741823===t?0!=(8&Ea)&&0==(48&Ea)?Za(e):(Ga(e),0===Ea&&Yi()):Ga(e),0==(4&Ea)||98!==n&&99!==n||(null===Va?Va=new Map([[e,t]]):(void 0===(n=Va.get(e))||n>t)&&Va.set(e,t))}}function Xa(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,i=null;if(null===r&&3===e.tag)i=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){i=r.stateNode;break}r=r.return}return null!==i&&(ka===i&&(ul(t),Pa===_a&&zl(i,Ta)),jl(i,t)),i}function Ka(e){var t=e.lastExpiredTime;if(0!==t)return t;if(!Il(e,t=e.firstPendingTime))return t;var n=e.lastPingedTime;return 2>=(e=n>(e=e.nextKnownPendingLevel)?n:e)&&t!==e?0:e}function Ga(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=Qi(Za.bind(null,e));else{var t=Ka(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=Ha();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var i=e.callbackPriority;if(e.callbackExpirationTime===t&&i>=r)return;n!==Ii&&Ei(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?Qi(Za.bind(null,e)):Wi(r,Ja.bind(null,e),{timeout:10*(1073741821-t)-Li()}),e.callbackNode=t}}}function Ja(e,t){if(Ya=0,t)return Dl(e,t=Ha()),Ga(e),null;var n=Ka(e);if(0!==n){if(t=e.callbackNode,0!=(48&Ea))throw Error(u(327));if(yl(),e===ka&&n===Ta||nl(e,n),null!==Sa){var r=Ea;Ea|=16;for(var i=il();;)try{ll();break}catch(t){rl(e,t)}if(Zi(),Ea=r,ba.current=i,1===Pa)throw t=Ca,nl(e,n),zl(e,n),Ga(e),t;if(null===Sa)switch(i=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,r=Pa,ka=null,r){case wa:case 1:throw Error(u(345));case 2:Dl(e,2<n?2:n);break;case xa:if(zl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(i)),1073741823===Oa&&10<(i=ja+500-Li())){if(za){var o=e.lastPingedTime;if(0===o||o>=n){e.lastPingedTime=n,nl(e,n);break}}if(0!==(o=Ka(e))&&o!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}e.timeoutHandle=gn(dl.bind(null,e),i);break}dl(e);break;case _a:if(zl(e,n),n===(r=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=fl(i)),za&&(0===(i=e.lastPingedTime)||i>=n)){e.lastPingedTime=n,nl(e,n);break}if(0!==(i=Ka(e))&&i!==n)break;if(0!==r&&r!==n){e.lastPingedTime=r;break}if(1073741823!==Na?r=10*(1073741821-Na)-Li():1073741823===Oa?r=0:(r=10*(1073741821-Oa)-5e3,0>(r=(i=Li())-r)&&(r=0),(n=10*(1073741821-n)-i)<(r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ma(r/1960))-r)&&(r=n)),10<r){e.timeoutHandle=gn(dl.bind(null,e),r);break}dl(e);break;case 5:if(1073741823!==Oa&&null!==Ma){o=Oa;var a=Ma;if(0>=(r=0|a.busyMinDurationMs)?r=0:(i=0|a.busyDelayMs,r=(o=Li()-(10*(1073741821-o)-(0|a.timeoutMs||5e3)))<=i?0:i+r-o),10<r){zl(e,n),e.timeoutHandle=gn(dl.bind(null,e),r);break}}dl(e);break;default:throw Error(u(329))}if(Ga(e),e.callbackNode===t)return Ja.bind(null,e)}}return null}function Za(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,0!=(48&Ea))throw Error(u(327));if(yl(),e===ka&&t===Ta||nl(e,t),null!==Sa){var n=Ea;Ea|=16;for(var r=il();;)try{al();break}catch(t){rl(e,t)}if(Zi(),Ea=n,ba.current=r,1===Pa)throw n=Ca,nl(e,t),zl(e,t),Ga(e),n;if(null!==Sa)throw Error(u(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,ka=null,dl(e),Ga(e)}return null}function el(e,t){var n=Ea;Ea|=1;try{return e(t)}finally{0===(Ea=n)&&Yi()}}function tl(e,t){var n=Ea;Ea&=-2,Ea|=8;try{return e(t)}finally{0===(Ea=n)&&Yi()}}function nl(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,wn(n)),null!==Sa)for(n=Sa.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&vi();break;case 3:zo(),li(di),li(fi);break;case 5:Do(r);break;case 4:zo();break;case 13:case 19:li(Ao);break;case 10:eo(r)}n=n.return}ka=e,Sa=Tl(e.current,null),Ta=t,Pa=wa,Ca=null,Na=Oa=1073741823,Ma=null,Ia=0,za=!1}function rl(e,t){for(;;){try{if(Zi(),Lo.current=vu,Yo)for(var n=Vo.memoizedState;null!==n;){var r=n.queue;null!==r&&(r.pending=null),n=n.next}if(Bo=0,Qo=Wo=Vo=null,Yo=!1,null===Sa||null===Sa.return)return Pa=1,Ca=t,Sa=null;e:{var i=e,o=Sa.return,u=Sa,a=t;if(t=Ta,u.effectTag|=2048,u.firstEffect=u.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var l=a;if(0==(2&u.mode)){var s=u.alternate;s?(u.updateQueue=s.updateQueue,u.memoizedState=s.memoizedState,u.expirationTime=s.expirationTime):(u.updateQueue=null,u.memoizedState=null)}var c=0!=(1&Ao.current),f=o;do{var d;if(d=13===f.tag){var p=f.memoizedState;if(null!==p)d=null!==p.dehydrated;else{var h=f.memoizedProps;d=void 0!==h.fallback&&(!0!==h.unstable_avoidThisFallback||!c)}}if(d){var y=f.updateQueue;if(null===y){var v=new Set;v.add(l),f.updateQueue=v}else y.add(l);if(0==(2&f.mode)){if(f.effectTag|=64,u.effectTag&=-2981,1===u.tag)if(null===u.alternate)u.tag=17;else{var m=ao(1073741823,null);m.tag=2,lo(u,m)}u.expirationTime=1073741823;break e}a=void 0,u=t;var b=i.pingCache;if(null===b?(b=i.pingCache=new pa,a=new Set,b.set(l,a)):void 0===(a=b.get(l))&&(a=new Set,b.set(l,a)),!a.has(u)){a.add(u);var g=gl.bind(null,i,l,u);l.then(g,g)}f.effectTag|=4096,f.expirationTime=t;break e}f=f.return}while(null!==f);a=Error((ve(u.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+me(u))}5!==Pa&&(Pa=2),a=Ju(a,u),f=o;do{switch(f.tag){case 3:l=a,f.effectTag|=4096,f.expirationTime=t,so(f,ha(f,l,t));break e;case 1:l=a;var w=f.type,x=f.stateNode;if(0==(64&f.effectTag)&&("function"==typeof w.getDerivedStateFromError||null!==x&&"function"==typeof x.componentDidCatch&&(null===Fa||!Fa.has(x)))){f.effectTag|=4096,f.expirationTime=t,so(f,ya(f,l,t));break e}}f=f.return}while(null!==f)}Sa=cl(Sa)}catch(e){t=e;continue}break}}function il(){var e=ba.current;return ba.current=vu,null===e?vu:e}function ol(e,t){e<Oa&&2<e&&(Oa=e),null!==t&&e<Na&&2<e&&(Na=e,Ma=t)}function ul(e){e>Ia&&(Ia=e)}function al(){for(;null!==Sa;)Sa=sl(Sa)}function ll(){for(;null!==Sa&&!zi();)Sa=sl(Sa)}function sl(e){var t=va(e.alternate,e,Ta);return e.memoizedProps=e.pendingProps,null===t&&(t=cl(e)),ga.current=null,t}function cl(e){Sa=e;do{var t=Sa.alternate;if(e=Sa.return,0==(2048&Sa.effectTag)){if(t=Ku(t,Sa,Ta),1===Ta||1!==Sa.childExpirationTime){for(var n=0,r=Sa.child;null!==r;){var i=r.expirationTime,o=r.childExpirationTime;i>n&&(n=i),o>n&&(n=o),r=r.sibling}Sa.childExpirationTime=n}if(null!==t)return t;null!==e&&0==(2048&e.effectTag)&&(null===e.firstEffect&&(e.firstEffect=Sa.firstEffect),null!==Sa.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Sa.firstEffect),e.lastEffect=Sa.lastEffect),1<Sa.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Sa:e.firstEffect=Sa,e.lastEffect=Sa))}else{if(null!==(t=Gu(Sa)))return t.effectTag&=2047,t;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(t=Sa.sibling))return t;Sa=e}while(null!==Sa);return Pa===wa&&(Pa=5),null}function fl(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function dl(e){var t=Ui();return Vi(99,pl.bind(null,e,t)),null}function pl(e,t){do{yl()}while(null!==Ua);if(0!=(48&Ea))throw Error(u(327));var n=e.finishedWork,r=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw Error(u(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var i=fl(n);if(e.firstPendingTime=i,r<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:r<=e.firstSuspendedTime&&(e.firstSuspendedTime=r-1),r<=e.lastPingedTime&&(e.lastPingedTime=0),r<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===ka&&(Sa=ka=null,Ta=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,i=n.firstEffect):i=n:i=n.firstEffect,null!==i){var o=Ea;Ea|=32,ga.current=null,yn=Ht;var a=pn();if(hn(a)){if("selectionStart"in a)var l={start:a.selectionStart,end:a.selectionEnd};else e:{var s=(l=(l=a.ownerDocument)&&l.defaultView||window).getSelection&&l.getSelection();if(s&&0!==s.rangeCount){l=s.anchorNode;var c=s.anchorOffset,f=s.focusNode;s=s.focusOffset;try{l.nodeType,f.nodeType}catch(e){l=null;break e}var d=0,p=-1,h=-1,y=0,v=0,m=a,b=null;t:for(;;){for(var g;m!==l||0!==c&&3!==m.nodeType||(p=d+c),m!==f||0!==s&&3!==m.nodeType||(h=d+s),3===m.nodeType&&(d+=m.nodeValue.length),null!==(g=m.firstChild);)b=m,m=g;for(;;){if(m===a)break t;if(b===l&&++y===c&&(p=d),b===f&&++v===s&&(h=d),null!==(g=m.nextSibling))break;b=(m=b).parentNode}m=g}l=-1===p||-1===h?null:{start:p,end:h}}else l=null}l=l||{start:0,end:0}}else l=null;vn={activeElementDetached:null,focusedElem:a,selectionRange:l},Ht=!1,Da=i;do{try{hl()}catch(e){if(null===Da)throw Error(u(330));bl(Da,e),Da=Da.nextEffect}}while(null!==Da);Da=i;do{try{for(a=e,l=t;null!==Da;){var w=Da.effectTag;if(16&w&&Ue(Da.stateNode,""),128&w){var x=Da.alternate;if(null!==x){var _=x.ref;null!==_&&("function"==typeof _?_(null):_.current=null)}}switch(1038&w){case 2:sa(Da),Da.effectTag&=-3;break;case 6:sa(Da),Da.effectTag&=-3,fa(Da.alternate,Da);break;case 1024:Da.effectTag&=-1025;break;case 1028:Da.effectTag&=-1025,fa(Da.alternate,Da);break;case 4:fa(Da.alternate,Da);break;case 8:ca(a,c=Da,l),aa(c)}Da=Da.nextEffect}}catch(e){if(null===Da)throw Error(u(330));bl(Da,e),Da=Da.nextEffect}}while(null!==Da);if(_=vn,x=pn(),w=_.focusedElem,l=_.selectionRange,x!==w&&w&&w.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(w.ownerDocument.documentElement,w)){null!==l&&hn(w)&&(x=l.start,void 0===(_=l.end)&&(_=x),"selectionStart"in w?(w.selectionStart=x,w.selectionEnd=Math.min(_,w.value.length)):(_=(x=w.ownerDocument||document)&&x.defaultView||window).getSelection&&(_=_.getSelection(),c=w.textContent.length,a=Math.min(l.start,c),l=void 0===l.end?a:Math.min(l.end,c),!_.extend&&a>l&&(c=l,l=a,a=c),c=dn(w,a),f=dn(w,l),c&&f&&(1!==_.rangeCount||_.anchorNode!==c.node||_.anchorOffset!==c.offset||_.focusNode!==f.node||_.focusOffset!==f.offset)&&((x=x.createRange()).setStart(c.node,c.offset),_.removeAllRanges(),a>l?(_.addRange(x),_.extend(f.node,f.offset)):(x.setEnd(f.node,f.offset),_.addRange(x))))),x=[];for(_=w;_=_.parentNode;)1===_.nodeType&&x.push({element:_,left:_.scrollLeft,top:_.scrollTop});for("function"==typeof w.focus&&w.focus(),w=0;w<x.length;w++)(_=x[w]).element.scrollLeft=_.left,_.element.scrollTop=_.top}Ht=!!yn,vn=yn=null,e.current=n,Da=i;do{try{for(w=e;null!==Da;){var E=Da.effectTag;if(36&E&&oa(w,Da.alternate,Da),128&E){x=void 0;var k=Da.ref;if(null!==k){var S=Da.stateNode;switch(Da.tag){case 5:x=S;break;default:x=S}"function"==typeof k?k(x):k.current=x}}Da=Da.nextEffect}}catch(e){if(null===Da)throw Error(u(330));bl(Da,e),Da=Da.nextEffect}}while(null!==Da);Da=null,ji(),Ea=o}else e.current=n;if(La)La=!1,Ua=e,Ba=t;else for(Da=i;null!==Da;)t=Da.nextEffect,Da.nextEffect=null,Da=t;if(0===(t=e.firstPendingTime)&&(Fa=null),1073741823===t?e===Qa?Wa++:(Wa=0,Qa=e):Wa=0,"function"==typeof xl&&xl(n.stateNode,r),Ga(e),Aa)throw Aa=!1,e=Ra,Ra=null,e;return 0!=(8&Ea)||Yi(),null}function hl(){for(;null!==Da;){var e=Da.effectTag;0!=(256&e)&&na(Da.alternate,Da),0==(512&e)||La||(La=!0,Wi(97,(function(){return yl(),null}))),Da=Da.nextEffect}}function yl(){if(90!==Ba){var e=97<Ba?97:Ba;return Ba=90,Vi(e,vl)}}function vl(){if(null===Ua)return!1;var e=Ua;if(Ua=null,0!=(48&Ea))throw Error(u(331));var t=Ea;for(Ea|=32,e=e.current.firstEffect;null!==e;){try{var n=e;if(0!=(512&n.effectTag))switch(n.tag){case 0:case 11:case 15:case 22:ra(5,n),ia(5,n)}}catch(t){if(null===e)throw Error(u(330));bl(e,t)}n=e.nextEffect,e.nextEffect=null,e=n}return Ea=t,Yi(),!0}function ml(e,t,n){lo(e,t=ha(e,t=Ju(n,t),1073741823)),null!==(e=Xa(e,1073741823))&&Ga(e)}function bl(e,t){if(3===e.tag)ml(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){ml(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Fa||!Fa.has(r))){lo(n,e=ya(n,e=Ju(t,e),1073741823)),null!==(n=Xa(n,1073741823))&&Ga(n);break}}n=n.return}}function gl(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),ka===e&&Ta===n?Pa===_a||Pa===xa&&1073741823===Oa&&Li()-ja<500?nl(e,Ta):za=!0:Il(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,Ga(e)))}function wl(e,t){var n=e.stateNode;null!==n&&n.delete(t),0===(t=0)&&(t=qa(t=Ha(),e,null)),null!==(e=Xa(e,t))&&Ga(e)}va=function(e,t,n){var r=t.expirationTime;if(null!==e){var i=t.pendingProps;if(e.memoizedProps!==i||di.current)Nu=!0;else{if(r<n){switch(Nu=!1,t.tag){case 3:Lu(t),Cu();break;case 5:if(jo(t),4&t.mode&&1!==n&&i.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:yi(t.type)&&gi(t);break;case 4:Io(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value,i=t.type._context,si(Xi,i._currentValue),i._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Qu(e,t,n):(si(Ao,1&Ao.current),null!==(t=$u(e,t,n))?t.sibling:null);si(Ao,1&Ao.current);break;case 19:if(r=t.childExpirationTime>=n,0!=(64&e.effectTag)){if(r)return qu(e,t,n);t.effectTag|=64}if(null!==(i=t.memoizedState)&&(i.rendering=null,i.tail=null),si(Ao,Ao.current),!r)return null}return $u(e,t,n)}Nu=!1}}else Nu=!1;switch(t.expirationTime=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,i=hi(t,fi.current),no(t,n),i=$o(null,t,r,e,i,n),t.effectTag|=1,"object"==typeof i&&null!==i&&"function"==typeof i.render&&void 0===i.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,yi(r)){var o=!0;gi(t)}else o=!1;t.memoizedState=null!==i.state&&void 0!==i.state?i.state:null,oo(t);var a=r.getDerivedStateFromProps;"function"==typeof a&&yo(t,r,a,e),i.updater=vo,t.stateNode=i,i._reactInternalFiber=t,wo(t,r,e,n),t=Fu(null,t,r,!0,o,n)}else t.tag=0,Mu(null,t,i,n),t=t.child;return t;case 16:e:{if(i=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps,function(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}}(i),1!==i._status)throw i._result;switch(i=i._result,t.type=i,o=t.tag=function(e){if("function"==typeof e)return Sl(e)?1:0;if(null!=e){if((e=e.$$typeof)===le)return 11;if(e===fe)return 14}return 2}(i),e=$i(i,e),o){case 0:t=Au(null,t,i,e,n);break e;case 1:t=Ru(null,t,i,e,n);break e;case 11:t=Iu(null,t,i,e,n);break e;case 14:t=zu(null,t,i,$i(i.type,e),r,n);break e}throw Error(u(306,i,""))}return t;case 0:return r=t.type,i=t.pendingProps,Au(e,t,r,i=t.elementType===r?i:$i(r,i),n);case 1:return r=t.type,i=t.pendingProps,Ru(e,t,r,i=t.elementType===r?i:$i(r,i),n);case 3:if(Lu(t),r=t.updateQueue,null===e||null===r)throw Error(u(282));if(r=t.pendingProps,i=null!==(i=t.memoizedState)?i.element:null,uo(e,t),co(t,r,null,n),(r=t.memoizedState.element)===i)Cu(),t=$u(e,t,n);else{if((i=t.stateNode.hydrate)&&(xu=xn(t.stateNode.containerInfo.firstChild),wu=t,i=_u=!0),i)for(n=To(t,null,r,n),t.child=n;n;)n.effectTag=-3&n.effectTag|1024,n=n.sibling;else Mu(e,t,r,n),Cu();t=t.child}return t;case 5:return jo(t),null===e&&Su(t),r=t.type,i=t.pendingProps,o=null!==e?e.memoizedProps:null,a=i.children,bn(r,i)?a=null:null!==o&&bn(r,o)&&(t.effectTag|=16),Du(e,t),4&t.mode&&1!==n&&i.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Mu(e,t,a,n),t=t.child),t;case 6:return null===e&&Su(t),null;case 13:return Qu(e,t,n);case 4:return Io(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=So(t,null,r,n):Mu(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,Iu(e,t,r,i=t.elementType===r?i:$i(r,i),n);case 7:return Mu(e,t,t.pendingProps,n),t.child;case 8:case 12:return Mu(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,i=t.pendingProps,a=t.memoizedProps,o=i.value;var l=t.type._context;if(si(Xi,l._currentValue),l._currentValue=o,null!==a)if(l=a.value,0===(o=Rr(l,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(a.children===i.children&&!di.current){t=$u(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var s=l.dependencies;if(null!==s){a=l.child;for(var c=s.firstContext;null!==c;){if(c.context===r&&0!=(c.observedBits&o)){1===l.tag&&((c=ao(n,null)).tag=2,lo(l,c)),l.expirationTime<n&&(l.expirationTime=n),null!==(c=l.alternate)&&c.expirationTime<n&&(c.expirationTime=n),to(l.return,n),s.expirationTime<n&&(s.expirationTime=n);break}c=c.next}}else a=10===l.tag&&l.type===t.type?null:l.child;if(null!==a)a.return=l;else for(a=l;null!==a;){if(a===t){a=null;break}if(null!==(l=a.sibling)){l.return=a.return,a=l;break}a=a.return}l=a}Mu(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=(o=t.pendingProps).children,no(t,n),r=r(i=ro(i,o.unstable_observedBits)),t.effectTag|=1,Mu(e,t,r,n),t.child;case 14:return o=$i(i=t.type,t.pendingProps),zu(e,t,i,o=$i(i.type,o),r,n);case 15:return ju(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:$i(r,i),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,yi(r)?(e=!0,gi(t)):e=!1,no(t,n),bo(t,r,i),wo(t,r,i,n),Fu(null,t,r,!0,e,n);case 19:return qu(e,t,n)}throw Error(u(156,t.tag))};var xl=null,_l=null;function El(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function kl(e,t,n,r){return new El(e,t,n,r)}function Sl(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Tl(e,t){var n=e.alternate;return null===n?((n=kl(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Pl(e,t,n,r,i,o){var a=2;if(r=e,"function"==typeof e)Sl(e)&&(a=1);else if("string"==typeof e)a=5;else e:switch(e){case ne:return Cl(n.children,i,o,t);case ae:a=8,i|=7;break;case re:a=8,i|=1;break;case ie:return(e=kl(12,n,t,8|i)).elementType=ie,e.type=ie,e.expirationTime=o,e;case se:return(e=kl(13,n,t,i)).type=se,e.elementType=se,e.expirationTime=o,e;case ce:return(e=kl(19,n,t,i)).elementType=ce,e.expirationTime=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case oe:a=10;break e;case ue:a=9;break e;case le:a=11;break e;case fe:a=14;break e;case de:a=16,r=null;break e;case pe:a=22;break e}throw Error(u(130,null==e?e:typeof e,""))}return(t=kl(a,n,t,i)).elementType=e,t.type=r,t.expirationTime=o,t}function Cl(e,t,n,r){return(e=kl(7,e,r,t)).expirationTime=n,e}function Ol(e,t,n){return(e=kl(6,e,null,t)).expirationTime=n,e}function Nl(e,t,n){return(t=kl(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Ml(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function Il(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function zl(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function jl(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function Dl(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function Al(e,t,n,r){var i=t.current,o=Ha(),a=po.suspense;o=qa(o,i,a);e:if(n){t:{if(Ze(n=n._reactInternalFiber)!==n||1!==n.tag)throw Error(u(170));var l=n;do{switch(l.tag){case 3:l=l.stateNode.context;break t;case 1:if(yi(l.type)){l=l.stateNode.__reactInternalMemoizedMergedChildContext;break t}}l=l.return}while(null!==l);throw Error(u(171))}if(1===n.tag){var s=n.type;if(yi(s)){n=bi(n,s,l);break e}}n=l}else n=ci;return null===t.context?t.context=n:t.pendingContext=n,(t=ao(o,a)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),lo(i,t),$a(i,o),o}function Rl(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Fl(e,t){null!==(e=e.memoizedState)&&null!==e.dehydrated&&e.retryTime<t&&(e.retryTime=t)}function Ll(e,t){Fl(e,t),(e=e.alternate)&&Fl(e,t)}function Ul(e,t,n){var r=new Ml(e,t,n=null!=n&&!0===n.hydrate),i=kl(3,null,null,2===t?7:1===t?3:0);r.current=i,i.stateNode=r,oo(i),e[Tn]=r.current,n&&0!==t&&function(e,t){var n=Je(t);Tt.forEach((function(e){ht(e,t,n)})),Pt.forEach((function(e){ht(e,t,n)}))}(0,9===e.nodeType?e:e.ownerDocument),this._internalRoot=r}function Bl(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Vl(e,t,n,r,i){var o=n._reactRootContainer;if(o){var u=o._internalRoot;if("function"==typeof i){var a=i;i=function(){var e=Rl(u);a.call(e)}}Al(t,u,e,i)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ul(e,0,t?{hydrate:!0}:void 0)}(n,r),u=o._internalRoot,"function"==typeof i){var l=i;i=function(){var e=Rl(u);l.call(e)}}tl((function(){Al(t,u,e,i)}))}return Rl(u)}function Wl(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:te,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function Ql(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!Bl(t))throw Error(u(200));return Wl(e,t,null,n)}Ul.prototype.render=function(e){Al(e,this._internalRoot,null,null)},Ul.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;Al(null,e,null,(function(){t[Tn]=null}))},yt=function(e){if(13===e.tag){var t=qi(Ha(),150,100);$a(e,t),Ll(e,t)}},vt=function(e){13===e.tag&&($a(e,3),Ll(e,3))},mt=function(e){if(13===e.tag){var t=Ha();$a(e,t=qa(t,e,null)),Ll(e,t)}},C=function(e,t,n){switch(t){case"input":if(Se(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=Nn(r);if(!i)throw Error(u(90));xe(r),Se(r,i)}}}break;case"textarea":Ie(e,n);break;case"select":null!=(t=n.value)&&Oe(e,!!n.multiple,t,!1)}},j=el,D=function(e,t,n,r,i){var o=Ea;Ea|=4;try{return Vi(98,e.bind(null,t,n,r,i))}finally{0===(Ea=o)&&Yi()}},A=function(){0==(49&Ea)&&(function(){if(null!==Va){var e=Va;Va=null,e.forEach((function(e,t){Dl(t,e),Ga(t)})),Yi()}}(),yl())},R=function(e,t){var n=Ea;Ea|=2;try{return e(t)}finally{0===(Ea=n)&&Yi()}};var Yl,Hl,ql={Events:[Cn,On,Nn,T,E,Rn,function(e){it(e,An)},I,z,Gt,at,yl,{current:!1}]};Hl=(Yl={findFiberByHostInstance:Pn,bundleType:0,version:"16.13.1",rendererPackageName:"react-dom"}).findFiberByHostInstance,function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);xl=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(e){}},_l=function(e){try{t.onCommitFiberUnmount(n,e)}catch(e){}}}catch(e){}}(i({},Yl,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:K.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return Hl?Hl(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null})),t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=ql,t.createPortal=Ql,t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw Error(u(188));throw Error(u(268,Object.keys(e)))}return e=null===(e=nt(t))?null:e.stateNode},t.flushSync=function(e,t){if(0!=(48&Ea))throw Error(u(187));var n=Ea;Ea|=1;try{return Vi(99,e.bind(null,t))}finally{Ea=n,Yi()}},t.hydrate=function(e,t,n){if(!Bl(t))throw Error(u(200));return Vl(null,e,t,!0,n)},t.render=function(e,t,n){if(!Bl(t))throw Error(u(200));return Vl(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Bl(e))throw Error(u(40));return!!e._reactRootContainer&&(tl((function(){Vl(null,null,e,!1,(function(){e._reactRootContainer=null,e[Tn]=null}))})),!0)},t.unstable_batchedUpdates=el,t.unstable_createPortal=function(e,t){return Ql(e,t,2<arguments.length&&void 0!==arguments[2]?arguments[2]:null)},t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Bl(n))throw Error(u(200));if(null==e||void 0===e._reactInternalFiber)throw Error(u(38));return Vl(e,t,n,!1,r)},t.version="16.13.1"},function(e,t,n){"use strict";e.exports=n(18)},function(e,t,n){"use strict";
/** @license React v0.19.1
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r,i,o,u,a;if("undefined"==typeof window||"function"!=typeof MessageChannel){var l=null,s=null,c=function(){if(null!==l)try{var e=t.unstable_now();l(!0,e),l=null}catch(e){throw setTimeout(c,0),e}},f=Date.now();t.unstable_now=function(){return Date.now()-f},r=function(e){null!==l?setTimeout(r,0,e):(l=e,setTimeout(c,0))},i=function(e,t){s=setTimeout(e,t)},o=function(){clearTimeout(s)},u=function(){return!1},a=t.unstable_forceFrameRate=function(){}}else{var d=window.performance,p=window.Date,h=window.setTimeout,y=window.clearTimeout;if("undefined"!=typeof console){var v=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof v&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")}if("object"==typeof d&&"function"==typeof d.now)t.unstable_now=function(){return d.now()};else{var m=p.now();t.unstable_now=function(){return p.now()-m}}var b=!1,g=null,w=-1,x=5,_=0;u=function(){return t.unstable_now()>=_},a=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):x=0<e?Math.floor(1e3/e):5};var E=new MessageChannel,k=E.port2;E.port1.onmessage=function(){if(null!==g){var e=t.unstable_now();_=e+x;try{g(!0,e)?k.postMessage(null):(b=!1,g=null)}catch(e){throw k.postMessage(null),e}}else b=!1},r=function(e){g=e,b||(b=!0,k.postMessage(null))},i=function(e,n){w=h((function(){e(t.unstable_now())}),n)},o=function(){y(w),w=-1}}function S(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,i=e[r];if(!(void 0!==i&&0<C(i,t)))break e;e[r]=t,e[n]=i,n=r}}function T(e){return void 0===(e=e[0])?null:e}function P(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,i=e.length;r<i;){var o=2*(r+1)-1,u=e[o],a=o+1,l=e[a];if(void 0!==u&&0>C(u,n))void 0!==l&&0>C(l,u)?(e[r]=l,e[a]=n,r=a):(e[r]=u,e[o]=n,r=o);else{if(!(void 0!==l&&0>C(l,n)))break e;e[r]=l,e[a]=n,r=a}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var O=[],N=[],M=1,I=null,z=3,j=!1,D=!1,A=!1;function R(e){for(var t=T(N);null!==t;){if(null===t.callback)P(N);else{if(!(t.startTime<=e))break;P(N),t.sortIndex=t.expirationTime,S(O,t)}t=T(N)}}function F(e){if(A=!1,R(e),!D)if(null!==T(O))D=!0,r(L);else{var t=T(N);null!==t&&i(F,t.startTime-e)}}function L(e,n){D=!1,A&&(A=!1,o()),j=!0;var r=z;try{for(R(n),I=T(O);null!==I&&(!(I.expirationTime>n)||e&&!u());){var a=I.callback;if(null!==a){I.callback=null,z=I.priorityLevel;var l=a(I.expirationTime<=n);n=t.unstable_now(),"function"==typeof l?I.callback=l:I===T(O)&&P(O),R(n)}else P(O);I=T(O)}if(null!==I)var s=!0;else{var c=T(N);null!==c&&i(F,c.startTime-n),s=!1}return s}finally{I=null,z=r,j=!1}}function U(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var B=a;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){D||j||(D=!0,r(L))},t.unstable_getCurrentPriorityLevel=function(){return z},t.unstable_getFirstCallbackNode=function(){return T(O)},t.unstable_next=function(e){switch(z){case 1:case 2:case 3:var t=3;break;default:t=z}var n=z;z=t;try{return e()}finally{z=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=B,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=z;z=e;try{return t()}finally{z=n}},t.unstable_scheduleCallback=function(e,n,u){var a=t.unstable_now();if("object"==typeof u&&null!==u){var l=u.delay;l="number"==typeof l&&0<l?a+l:a,u="number"==typeof u.timeout?u.timeout:U(e)}else u=U(e),l=a;return e={id:M++,callback:n,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>a?(e.sortIndex=l,S(N,e),null===T(O)&&e===T(N)&&(A?o():A=!0,i(F,l-a))):(e.sortIndex=u,S(O,e),D||j||(D=!0,r(L))),e},t.unstable_shouldYield=function(){var e=t.unstable_now();R(e);var n=T(O);return n!==I&&null!==I&&null!==n&&null!==n.callback&&n.startTime<=e&&n.expirationTime<I.expirationTime||u()},t.unstable_wrapCallback=function(e){var t=z;return function(){var n=z;z=t;try{return e.apply(this,arguments)}finally{z=n}}}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),o=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),u=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.hasOwnProperty.call(e,n)&&o(t,e,n);return u(t,e),t},l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var s=a(n(2)),c=l(n(0)),f=n(1),d=n(20),p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.handleKeyDown=function(e){switch(e.key){case"p":t.pause();break;case"b":t.addBug();break;case"t":t.addPlant()}},t.pause=function(){t.props.game.togglePause(),t.forceUpdate()},t.addPlant=function(){var e=t.props,n=e.game,r=e.treeFactory;t.plantPosCursor||(t.plantPosCursor=new c.default(t.randomX(),0)),t.plantPosCursor.x=(t.plantPosCursor.x+f.randInt(t.props.width/2,t.props.width/3))%t.props.width,n.addEntity(r.build({pos:t.plantPosCursor.clone()}))},t.addBug=function(){var e=t.props,n=e.game,r=e.bugFactory,i=f.randInt(5,10),o=new c.default(t.randomX(),0),u=f.randBool()?new c.default(1,0):new c.default(-1,0),a=new c.default(3,2).multiplyScalar(i),l=i/10,s=r.build({pos:o,direction:u,size:a,speed:l});t.setState({bug:s}),n.addEntity(s)},t.randomX=function(){return Math.floor(Math.random()*(t.props.width-40))},t}return i(t,e),t.prototype.componentDidMount=function(){this.props.game.start(),document.addEventListener("keydown",this.handleKeyDown)},t.prototype.render=function(){var e=this;return s.createElement("div",null,s.createElement("div",{id:"bug-background"}),s.createElement("div",{id:"ground"}),s.createElement("div",{id:"bug-ui",style:{height:this.props.height,width:this.props.width}}),s.createElement("div",{id:"bug-controls"},s.createElement("button",{id:"pause-button",className:this.props.game.isPaused?"paused":"",onClick:this.pause},"PAUSE"),s.createElement("button",{id:"add-bug",onClick:function(){return e.addBug()}},"Add Bug"),s.createElement("button",{id:"add-tree",onClick:function(){return e.addPlant()}},"Add Plant")),s.createElement(d.Debugger,{game:this.props.game}))},t}(s.Component);t.default=p},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Debugger=void 0;var u=o(n(2)),a=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.render=function(){return u.default.createElement("pre",null,window.DEBUG&&u.default.createElement("p",{className:"debug"},t.getMessage()))},t.handleKeyDown=function(e){switch(e.key){case"d":window.DEBUG=!window.DEBUG;break;case"ArrowLeft":case"[":t.targetNextEntity();break;case"ArrowRight":case"]":t.targetPreviousEntity()}},t.targetPreviousEntity=function(){var e=t.props.game.entityManager.getEntities();if(!(e.length<1)){var n=e.indexOf(t.state.currentEntity),r=0;"number"==typeof n&&n+1<e.length&&(r=n+1),t.setState({currentEntity:e[r]})}},t.targetNextEntity=function(){var e=t.props.game.entityManager.getEntities();if(!(e.length<1)){var n=e.indexOf(t.state.currentEntity),r=e.length-1;"number"==typeof n&&n>0&&(r=n-1),t.setState({currentEntity:e[r]})}},t}return i(t,e),t.prototype.componentDidMount=function(){var e=this;this.setState({}),setInterval((function(){return e.forceUpdate()}),500),document.addEventListener("keydown",this.handleKeyDown)},t.prototype.getMessage=function(){try{return JSON.stringify(this.state.currentEntity,null,4)}catch(e){return"ERROR DISPLAYING DEBUG FOR ENTITY!"}},t}(u.default.Component);t.Debugger=a},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GameEngine=void 0;var i=r(n(22)),o=function(){function e(e){var t=this;this.isPaused=!1,this.frame=0,this.update=function(){t.isPaused||t.entityUpdater.update()},this.gameUI=e.gameUI,this.entityManager=e.entityManager,this.entityUpdater=new i.default(e.entityManager)}return e.prototype.start=function(){setInterval(this.update,17),this.gameUI.start()},e.prototype.addEntity=function(e){this.entityManager.addEntity(e)},e.prototype.togglePause=function(){this.isPaused=!this.isPaused,this.gameUI.togglePause(),this.isPaused&&window.DEBUG&&console.log(this.entityManager.getEntities())},e}();t.GameEngine=o},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(3)),o=function(){function e(e){var t=this;this.entityManager=e,this.frame=0,this.getCollisions=function(e,n){var r=[];return n.forEach((function(n){t.isIntersecting(e,n)&&r.push(n)})),r},this.isIntersecting=function(e,t){var n,r;e instanceof i.default&&e.direction.x>0&&(n=e.pos.clone().subtractScalarX(e.size.x-1)),t instanceof i.default&&t.direction.x>0&&(r=t.pos.clone().subtractScalarX(t.size.x-1));var o=n||e.pos,u=e.size,a=r||t.pos,l=t.size;return t!==e&&a.x<o.x+u.x&&a.x+l.x>o.x&&a.y<o.y+u.y&&l.y+a.y>o.y}}return e.prototype.update=function(){this.updateAllEntities(),this.frame=this.frame+1},e.prototype.updateAllEntities=function(){var e=this,t=this.entityManager.getEntities();t.forEach((function(n){0!==n.updateSpeed&&e.frame%n.updateSpeed==0&&n.update(e.getCollisions(n,t))}))},e}();t.default=o},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.GroundWalk=void 0;var u=n(4),a=n(11),l=o(n(5)),s=n(7),c=n(0),f=n(25),d=o(n(8)),p=function(e){function t(t,n){void 0===n&&(n=1);var r=e.call(this,t)||this;return r.countdown=n,r}return i(t,e),t.prototype.do=function(e){if(e.find((function(e){return e instanceof l.default}))){var t=e.find((function(e){return e instanceof l.default}));h(this.bug,t)}else e&&e.find((function(e){return e instanceof d.default}))?new s.TurnAround(this.bug).do():a.walk(this.bug);this.countDown()},t.prototype.countDown=function(){this.countdown--,0==this.countdown&&this.bug.finishBehavior()},t}(u.BugBehavior);t.GroundWalk=p;var h=function(e,t){e.direction=t.graph.node.clone().norm(),e.pos=new c(t.pos.x,0).add(e.direction.clone().multiplyScalar(e.size.x)),e.climbingOn={plant:t,branch:t.graph},e.zIndexChanged.next(),e.finishBehavior(),e.queueBehavior(new f.Climb(e))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TreeStruct=void 0;var r=n(0),i=function e(t,n,i){var a=this;void 0===t&&(t=1),void 0===i&&(i=6),this.parent=null,this.left=null,this.right=null,this.node=new r(0,1),this.depth=0,this.update=function(){var t=(a.maxSize-a.node.y*Math.pow(a.depth,a.growthFactor))/100;a.maxSize-a.node.y<a.maxSize/100||(a.node.addScalarY(Math.sin(a.node.direction())*t),a.node.addScalarX(Math.cos(a.node.direction())*t),null==a.left&&null==a.right&&a.node.magnitude()>a.branchFactor&&a.depth<6&&(a.left=new e(a.depth+1,a),a.left.node.rotateDeg(a.node.direction()+a.branchAngle),a.right=new e(a.depth+1,a),a.right.node.rotateDeg(a.node.direction()-a.branchAngle)),a.updateLeft(),a.updateRight())},this.updateLeft=function(){return a.left&&a.left.update()},this.updateRight=function(){return a.right&&a.right.update()},this.depth=t,this.maxDepth=i,this.maxSize=o(80,5),this.branchFactor=o(10,10),this.branchAngle=o(60,25),this.growthFactor=u(1.2,.2,1),this.parent=n};t.TreeStruct=i;var o=function(e,t){return Math.floor(Math.random()*t)+e-t/2},u=function(e,t,n){var r=Math.pow(10,n);return o(e*r,t*r)/r}},function(e,t,n){"use strict";var r,i=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0}),t.beginClimbing=t.Climb=void 0;var o=n(4),u=n(11),a=n(1),l=n(0),s=n(7),c=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.do=function(){var e=this.bug,t=e.climbingOn.branch,n=e.climbingOn.plant.getAbsolutePos(t),r=e.pos.clone().subtract(n);if(Math.abs(t.node.direction()-e.direction.direction())>3)Math.abs(r.direction()-t.node.direction())>.3&&(t.parent?(e.climbingOn.branch=t.parent,e.pos=e.climbingOn.plant.getAbsolutePos(e.climbingOn.branch).add(e.climbingOn.branch.node),e.direction=e.climbingOn.branch.node.clone().norm().multiplyScalar(-1)):d(e));else if(r.magnitude()>=t.node.magnitude()){var i=a.randBool()&&t.left?t.left:t.right?t.right:void 0;i?p(e,i):e.queueBehavior(new s.TurnAround(e))}u.walk(e)},t}(o.BugBehavior);t.Climb=c,t.beginClimbing=function(e,t){e.direction=t.graph.node.clone().norm(),e.pos=new l(t.pos.x,0).add(e.direction.clone().multiplyScalar(e.size.x)),e.climbingOn={plant:t,branch:t.graph},e.zIndexChanged.next()};var f,d=function(e){e.direction=new l(a.randBool()?1:-1,0);var t=e.direction.x>0?e.size.x+1:-(e.size.x+1),n=e.climbingOn.plant.pos.x+t;e.pos=new l(n,e.climbingOn.plant.pos.y),e.climbingOn=void 0,e.zIndexChanged.next(),e.finishBehavior()},p=function(e,t,n){var r;void 0===n&&(n=f.UP),r=n===f.UP?new l(e.size.x/3,0).rotate(t.node.direction()):t.node,e.climbingOn.branch=t,e.pos=e.climbingOn.plant.getAbsolutePos(t).add(r),e.direction=t.node.clone().norm().multiplyScalar(n===f.UP?1:-1)};!function(e){e[e.UP=0]="UP",e[e.DOWN=1]="DOWN"}(f||(f={}))},function(e,t,n){"use strict";var r=this&&this.__spreadArrays||function(){for(var e=0,t=0,n=arguments.length;t<n;t++)e+=arguments[t].length;var r=Array(e),i=0;for(t=0;t<n;t++)for(var o=arguments[t],u=0,a=o.length;u<a;u++,i++)r[i]=o[u];return r},i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var o=i(n(3)),u=i(n(5)),a=function(e){var t=this;this.entities=[],this.getEntities=function(){return t.entities},this.addEntity=function(e){t.entities.push(e),e instanceof o.default&&e.zIndexChanged.subscribe(t.sortEntities())},this.sortEntities=function(){return function(){var e=t.entities.filter((function(e){return e instanceof u.default})).map((function(e){return[e]}));t.entities.filter((function(e){return e instanceof o.default&&e.climbingOn})).forEach((function(t){var n=e.findIndex((function(e){return e[0]===t.climbingOn.plant}));e[n].push(t)}));var n=t.entities.filter((function(e){return!(e instanceof u.default||e instanceof o.default&&e.climbingOn)})).map((function(e){return[e]}));t.entities=t.flatten(r(e,n).sort((function(e,t){return e[0].id-t[0].id}))),window.DEBUG&&console.log(t.entities)}},this.flatten=function(e){return e.reduce((function(e,n){return e.concat(Array.isArray(n)?t.flatten(n):n)}),[])},e.forEach(this.addEntity)};t.default=a},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(5)),o=r(n(3)),u=r(n(28)),a=r(n(32)),l=r(n(8)),s=n(34),c=n(6),f=function(){function e(e,t){var n=this;this.target=e,this.entityManager=t,this.isPaused=!1,this.frame=0,this.start=function(){var e=n.createCanvas();n.ctx=e.getContext("2d"),n.beginLoop=n.beginLoop.bind(n),n.beginLoop(0)},this.render=function(){c.clearCanvas(n.ctx),n.entityManager.getEntities().forEach((function(e){n.renderEntity(e,n.ctx)}))},this.togglePause=function(){n.isPaused=!n.isPaused}}return e.prototype.beginLoop=function(e){this.isPaused||this.render(),window.requestAnimationFrame(this.beginLoop)},e.prototype.createCanvas=function(){var e=document.getElementById(this.target),t=document.createElement("canvas");return t.height=e.clientHeight,t.width=e.clientWidth,e.appendChild(t),t},e.prototype.renderEntity=function(e,t){e instanceof o.default?u.default(e,t):e instanceof l.default?s.wallRenderer(e,t):e instanceof i.default&&a.default(e,t)},e}();t.default=f},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(29)),o=n(6),u=n(0),a=[],l=function(e){return a[e.id]||function(e){var t=new i.default(e.id,e);return a[e.id]=t,t}(e)};t.default=function(e,t){var n=l(e);n.update();var r=e.climbingOn?3:0,i=e.direction,a=e.size,s=new u(e.pos.x,o.fixY(t,e.pos.y));if(t.save(),t.translate(s.x,s.y),window.DEBUG&&o.circle(t,5),i.x>0)t.rotate(-i.angle()),t.scale(-1,1);else{var c=i.clone().multiplyScalarX(-1);t.rotate(c.angle())}t.drawImage(n.getImage(),0,-a.y+r,a.x,a.y),t.restore()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(1),i=n(10),o=function(){function e(e,t){this.id=e,this.bug=t,this.frame=0,this.imageIdx=0,this.randomOffset=r.randInt(0,15)}return e.prototype.getImage=function(){return e.images[this.imageIdx]},e.prototype.update=function(){!this.bug.behaviorQueue[0]||this.bug.behaviorQueue[0]instanceof i.Pause||(this.frame+++this.randomOffset)%15==0&&(this.imageIdx=(this.imageIdx+1)%2)},e.getBugImages=function(){var e=n(30),t=n(31),r=[new Image,new Image];return r[0].src=e,r[1].src=t,r},e.images=e.getBugImages(),e}();t.default=o},function(e,t,n){e.exports=n.p+"298529481724a92ace801b209398c33f.png"},function(e,t,n){e.exports=n.p+"97eb36295e4099d3ad0525295eec54bd.png"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n(6),i=n(12),o=function(){var e=new Image;return e.src=n(33),e}(),u=[];t.default=function(e,t){if(u[e.id])a(e,t);else{var n=new OffscreenCanvas(t.canvas.width,t.canvas.height);l(e,n.getContext("2d")),u[e.id]=n}};var a=function(e,t){var n=u[e.id];t.drawImage(n,0,0,t.canvas.width,t.canvas.height)},l=function(e,t){var n=e.pos;t.save(),t.strokeStyle="#a56a27",t.lineWidth=10,t.translate(n.x,r.fixY(t,n.y)),s(e.graph,t),t.restore()},s=function(e,t){e instanceof i.PlantagoStruct?d(e,t):(c(e,t),f(e,t))},c=function(e,t){var n=Math.floor(e.node.x),r=Math.floor(e.node.y);t.moveTo(0,0),t.lineTo(n,-r),t.stroke()},f=function(e,t){var n=Math.floor(e.node.x),r=Math.floor(e.node.y);t.save(),t.translate(n,-r),e.left&&s(e.left,t),e.right&&s(e.right,t),t.restore()},d=function(e,t){var n=Math.floor(e.node.x),r=Math.floor(e.node.y);t.save(),window.DEBUG&&(t.moveTo(0,0),t.lineTo(n,-r),t.stroke()),t.rotate(-e.node.angle()+Math.PI/2),t.drawImage(o,-24,-173,42,178),t.restore()}},function(e,t,n){e.exports=n.p+"b207d35b8b05f0dc8471df08fd33e627.png"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.wallRenderer=void 0;var r=n(6);t.wallRenderer=function(e,t){var n=e.pos,i=e.size;t.save(),t.translate(n.x,r.fixY(t,n.y)),t.translate(0,-i.y),t.fillRect(0,0,i.x,i.y),t.restore()}},function(e,t,n){var r=n(36),i=n(37);"string"==typeof(i=i.__esModule?i.default:i)&&(i=[[e.i,i,""]]);var o={insert:"head",singleton:!1};r(i,o);e.exports=i.locals||{}},function(e,t,n){"use strict";var r,i=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),u=[];function a(e){for(var t=-1,n=0;n<u.length;n++)if(u[n].identifier===e){t=n;break}return t}function l(e,t){for(var n={},r=[],i=0;i<e.length;i++){var o=e[i],l=t.base?o[0]+t.base:o[0],s=n[l]||0,c="".concat(l," ").concat(s);n[l]=s+1;var f=a(c),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==f?(u[f].references++,u[f].updater(d)):u.push({identifier:c,updater:v(d,t),references:1}),r.push(c)}return r}function s(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var u=o(e.insert||"head");if(!u)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");u.appendChild(t)}return t}var c,f=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function d(e,t,n,r){var i=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,i);else{var o=document.createTextNode(i),u=e.childNodes;u[t]&&e.removeChild(u[t]),u.length?e.insertBefore(o,u[t]):e.appendChild(o)}}function p(e,t,n){var r=n.css,i=n.media,o=n.sourceMap;if(i?e.setAttribute("media",i):e.removeAttribute("media"),o&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var h=null,y=0;function v(e,t){var n,r,i;if(t.singleton){var o=y++;n=h||(h=s(t)),r=d.bind(null,n,o,!1),i=d.bind(null,n,o,!0)}else n=s(t),r=p.bind(null,n,t),i=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else i()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=i());var n=l(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var i=a(n[r]);u[i].references--}for(var o=l(e,t),s=0;s<n.length;s++){var c=a(n[s]);0===u[c].references&&(u[c].updater(),u.splice(c,1))}n=o}}}},function(e,t,n){(t=n(38)(!1)).push([e.i,".debug{margin-top:100px;z-index:2;position:absolute}#bug-background{position:absolute;box-sizing:border-box;top:0px;left:0px;z-index:0;height:90vh;width:100vw;background:#f8fff7;background:linear-gradient(0deg, rgba(248,255,247,0) 0%, #acf1ff 94%, #91ecff 100%)}#ground{position:fixed;width:100vw;bottom:0px;left:0px;background-color:#7a4a25;height:5px;z-index:0}#bug-ui{box-sizing:border-box;position:fixed;bottom:0px;left:0px;z-index:1;height:90vh;width:100vw;margin-bottom:2px}#bug-controls{box-sizing:border-box;position:absolute;top:0px;left:0px;z-index:2;width:400px;display:flex;justify-content:space-evenly;padding-top:10px;width:100vw}#bug-controls button{font-size:16px;border-radius:6px;outline:none}#bug-controls button :active{background-color:#101010}#bug-controls button.paused{border-style:inset;background-color:#FFFF88}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var i=(u=r,a=btoa(unescape(encodeURIComponent(JSON.stringify(u)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),"/*# ".concat(l," */")),o=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([i]).join("\n")}var u,a,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(r)for(var o=0;o<this.length;o++){var u=this[o][0];null!=u&&(i[u]=!0)}for(var a=0;a<e.length;a++){var l=[].concat(e[a]);r&&i[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(3)),o=n(0),u=n(1),a=function(){function e(e,t){this.generateId=e,this.spontaneous=t}return e.prototype.build=function(e){var t=Object.assign({spontaneous:this.spontaneous,direction:new o(u.randInt(-5,5),u.randInt(-5,5)).norm()},e);return new i.default(this.generateId(),t)},e}();t.default=a},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.maxId=t.generateId=void 0;var r=0;t.generateId=function(){return r++},t.maxId=function(){return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(e,t){var n=this;this.signal=!1,this.requestsToWait=0,this.get=function(){return n.signal&&0===n.requestsToWait?(n.signal=!1,!0):(n.requestsToWait>0&&n.requestsToWait--,!1)};var r=function(){setTimeout((function(){n.signal=!0,n.requestsToWait=t(),r()}),e())};r()};t.default=r},function(e,t,n){"use strict";var r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var i=r(n(5)),o=n(43),u=function(){function e(e,t){this.generateId=e,this.spontaneous=t}return e.prototype.build=function(e){var t=Object.assign({spontaneous:this.spontaneous,graph:new o.PlantagoBushStruct},e);return new i.default(this.generateId(),t)},e}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.PlantagoBushStruct=void 0;var r=n(0),i=n(12),o=n(1),u=function e(t,n,u,a,l,s){var c=this;void 0===t&&(t=1),void 0===n&&(n=null),void 0===u&&(u=4),void 0===a&&(a=!1),void 0===l&&(l=0),void 0===s&&(s=40),this.depth=t,this.parent=n,this.maxDepth=u,this.flip=a,this.angle=l,this.nodeLength=s,this.branch=function(){return new e(c.depth+1,c,c.maxDepth,!c.flip,c.angle,c.nodeLength)},this.leaf=function(){return new i.PlantagoStruct(c.depth+1,c,c.maxDepth,(c.flip?-30:-160)+o.randInt(-15,15)+c.angle)},this.update=function(){},1==t&&(this.flip=o.randBool(),this.maxDepth=o.randInt(5,10),this.angle=o.normalRange(-15,15),this.nodeLength=o.normalRange(30,60)),this.node=new r(0,1).multiplyScalar(this.nodeLength),this.node.rotateByDeg((this.flip?-80:-100)+this.angle),t<u?(this.left=this.flip?this.branch():this.leaf(),this.right=this.flip?this.leaf():this.branch()):this.left=this.leaf()};t.PlantagoBushStruct=u},function(e,t,n){"use strict";n.r(t),n.d(t,"Observable",(function(){return E})),n.d(t,"ConnectableObservable",(function(){return I})),n.d(t,"GroupedObservable",(function(){return j})),n.d(t,"observable",(function(){return g})),n.d(t,"Subject",(function(){return C})),n.d(t,"BehaviorSubject",(function(){return A})),n.d(t,"ReplaySubject",(function(){return te})),n.d(t,"AsyncSubject",(function(){return re})),n.d(t,"asapScheduler",(function(){return fe})),n.d(t,"asyncScheduler",(function(){return de})),n.d(t,"queueScheduler",(function(){return B})),n.d(t,"animationFrameScheduler",(function(){return he})),n.d(t,"VirtualTimeScheduler",(function(){return ye})),n.d(t,"VirtualAction",(function(){return ve})),n.d(t,"Scheduler",(function(){return L})),n.d(t,"Subscription",(function(){return p})),n.d(t,"Subscriber",(function(){return v})),n.d(t,"Notification",(function(){return J})),n.d(t,"NotificationKind",(function(){return Y})),n.d(t,"pipe",(function(){return x})),n.d(t,"noop",(function(){return me})),n.d(t,"identity",(function(){return w})),n.d(t,"isObservable",(function(){return be})),n.d(t,"ArgumentOutOfRangeError",(function(){return ge})),n.d(t,"EmptyError",(function(){return we})),n.d(t,"ObjectUnsubscribedError",(function(){return S})),n.d(t,"UnsubscriptionError",(function(){return d})),n.d(t,"TimeoutError",(function(){return xe})),n.d(t,"bindCallback",(function(){return Se})),n.d(t,"bindNodeCallback",(function(){return Ce})),n.d(t,"combineLatest",(function(){return Be})),n.d(t,"concat",(function(){return Ke})),n.d(t,"defer",(function(){return Ge})),n.d(t,"empty",(function(){return W})),n.d(t,"forkJoin",(function(){return Je})),n.d(t,"from",(function(){return Ye})),n.d(t,"fromEvent",(function(){return et})),n.d(t,"fromEventPattern",(function(){return tt})),n.d(t,"generate",(function(){return nt})),n.d(t,"iif",(function(){return it})),n.d(t,"interval",(function(){return ut})),n.d(t,"merge",(function(){return lt})),n.d(t,"never",(function(){return ct})),n.d(t,"of",(function(){return X})),n.d(t,"onErrorResumeNext",(function(){return ft})),n.d(t,"pairs",(function(){return dt})),n.d(t,"partition",(function(){return bt})),n.d(t,"race",(function(){return gt})),n.d(t,"range",(function(){return _t})),n.d(t,"throwError",(function(){return K})),n.d(t,"timer",(function(){return kt})),n.d(t,"using",(function(){return Tt})),n.d(t,"zip",(function(){return Pt})),n.d(t,"scheduled",(function(){return Qe})),n.d(t,"EMPTY",(function(){return V})),n.d(t,"NEVER",(function(){return st})),n.d(t,"config",(function(){return a}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function i(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function o(e){return"function"==typeof e}var u=!1,a={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){e&&(new Error).stack;u=e},get useDeprecatedSynchronousErrorHandling(){return u}};function l(e){setTimeout((function(){throw e}),0)}var s={closed:!0,next:function(e){},error:function(e){if(a.useDeprecatedSynchronousErrorHandling)throw e;l(e)},complete:function(){}},c=function(){return Array.isArray||function(e){return e&&"number"==typeof e.length}}();function f(e){return null!==e&&"object"==typeof e}var d=function(){function e(e){return Error.call(this),this.message=e?e.length+" errors occurred during unsubscription:\n"+e.map((function(e,t){return t+1+") "+e.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=e,this}return e.prototype=Object.create(Error.prototype),e}(),p=function(){function e(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}return e.prototype.unsubscribe=function(){var t;if(!this.closed){var n=this._parentOrParents,r=this._unsubscribe,i=this._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof e)n.remove(this);else if(null!==n)for(var u=0;u<n.length;++u){n[u].remove(this)}if(o(r))try{r.call(this)}catch(e){t=e instanceof d?h(e.errors):[e]}if(c(i)){u=-1;for(var a=i.length;++u<a;){var l=i[u];if(f(l))try{l.unsubscribe()}catch(e){t=t||[],e instanceof d?t=t.concat(h(e.errors)):t.push(e)}}}if(t)throw new d(t)}},e.prototype.add=function(t){var n=t;if(!t)return e.EMPTY;switch(typeof t){case"function":n=new e(t);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof e)){var r=n;(n=new e)._subscriptions=[r]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}var i=n._parentOrParents;if(null===i)n._parentOrParents=this;else if(i instanceof e){if(i===this)return n;n._parentOrParents=[i,this]}else{if(-1!==i.indexOf(this))return n;i.push(this)}var o=this._subscriptions;return null===o?this._subscriptions=[n]:o.push(n),n},e.prototype.remove=function(e){var t=this._subscriptions;if(t){var n=t.indexOf(e);-1!==n&&t.splice(n,1)}},e.EMPTY=function(e){return e.closed=!0,e}(new e),e}();function h(e){return e.reduce((function(e,t){return e.concat(t instanceof d?t.errors:t)}),[])}var y=function(){return"function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random()}(),v=function(e){function t(n,r,i){var o=e.call(this)||this;switch(o.syncErrorValue=null,o.syncErrorThrown=!1,o.syncErrorThrowable=!1,o.isStopped=!1,arguments.length){case 0:o.destination=s;break;case 1:if(!n){o.destination=s;break}if("object"==typeof n){n instanceof t?(o.syncErrorThrowable=n.syncErrorThrowable,o.destination=n,n.add(o)):(o.syncErrorThrowable=!0,o.destination=new m(o,n));break}default:o.syncErrorThrowable=!0,o.destination=new m(o,n,r,i)}return o}return i(t,e),t.prototype[y]=function(){return this},t.create=function(e,n,r){var i=new t(e,n,r);return i.syncErrorThrowable=!1,i},t.prototype.next=function(e){this.isStopped||this._next(e)},t.prototype.error=function(e){this.isStopped||(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this))},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t.prototype._unsubscribeAndRecycle=function(){var e=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this},t}(p),m=function(e){function t(t,n,r,i){var u,a=e.call(this)||this;a._parentSubscriber=t;var l=a;return o(n)?u=n:n&&(u=n.next,r=n.error,i=n.complete,n!==s&&(o((l=Object.create(n)).unsubscribe)&&a.add(l.unsubscribe.bind(l)),l.unsubscribe=a.unsubscribe.bind(a))),a._context=l,a._next=u,a._error=r,a._complete=i,a}return i(t,e),t.prototype.next=function(e){if(!this.isStopped&&this._next){var t=this._parentSubscriber;a.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}},t.prototype.error=function(e){if(!this.isStopped){var t=this._parentSubscriber,n=a.useDeprecatedSynchronousErrorHandling;if(this._error)n&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)n?(t.syncErrorValue=e,t.syncErrorThrown=!0):l(e),this.unsubscribe();else{if(this.unsubscribe(),n)throw e;l(e)}}},t.prototype.complete=function(){var e=this;if(!this.isStopped){var t=this._parentSubscriber;if(this._complete){var n=function(){return e._complete.call(e._context)};a.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,n),this.unsubscribe()):(this.__tryOrUnsub(n),this.unsubscribe())}else this.unsubscribe()}},t.prototype.__tryOrUnsub=function(e,t){try{e.call(this._context,t)}catch(e){if(this.unsubscribe(),a.useDeprecatedSynchronousErrorHandling)throw e;l(e)}},t.prototype.__tryOrSetError=function(e,t,n){if(!a.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,n)}catch(t){return a.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=t,e.syncErrorThrown=!0,!0):(l(t),!0)}return!1},t.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t}(v);function b(e){for(;e;){var t=e,n=t.closed,r=t.destination,i=t.isStopped;if(n||i)return!1;e=r&&r instanceof v?r:null}return!0}var g=function(){return"function"==typeof Symbol&&Symbol.observable||"@@observable"}();function w(e){return e}function x(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return _(e)}function _(e){return 0===e.length?w:1===e.length?e[0]:function(t){return e.reduce((function(e,t){return t(e)}),t)}}var E=function(){function e(e){this._isScalar=!1,e&&(this._subscribe=e)}return e.prototype.lift=function(t){var n=new e;return n.source=this,n.operator=t,n},e.prototype.subscribe=function(e,t,n){var r=this.operator,i=function(e,t,n){if(e){if(e instanceof v)return e;if(e[y])return e[y]()}return e||t||n?new v(e,t,n):new v(s)}(e,t,n);if(r?i.add(r.call(i,this.source)):i.add(this.source||a.useDeprecatedSynchronousErrorHandling&&!i.syncErrorThrowable?this._subscribe(i):this._trySubscribe(i)),a.useDeprecatedSynchronousErrorHandling&&i.syncErrorThrowable&&(i.syncErrorThrowable=!1,i.syncErrorThrown))throw i.syncErrorValue;return i},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){a.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),b(e)?e.error(t):console.warn(t)}},e.prototype.forEach=function(e,t){var n=this;return new(t=k(t))((function(t,r){var i;i=n.subscribe((function(t){try{e(t)}catch(e){r(e),i&&i.unsubscribe()}}),r,t)}))},e.prototype._subscribe=function(e){var t=this.source;return t&&t.subscribe(e)},e.prototype[g]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return 0===e.length?this:_(e)(this)},e.prototype.toPromise=function(e){var t=this;return new(e=k(e))((function(e,n){var r;t.subscribe((function(e){return r=e}),(function(e){return n(e)}),(function(){return e(r)}))}))},e.create=function(t){return new e(t)},e}();function k(e){if(e||(e=a.Promise||Promise),!e)throw new Error("no Promise impl found");return e}var S=function(){function e(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return e.prototype=Object.create(Error.prototype),e}(),T=function(e){function t(t,n){var r=e.call(this)||this;return r.subject=t,r.subscriber=n,r.closed=!1,r}return i(t,e),t.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var e=this.subject,t=e.observers;if(this.subject=null,t&&0!==t.length&&!e.isStopped&&!e.closed){var n=t.indexOf(this.subscriber);-1!==n&&t.splice(n,1)}}},t}(p),P=function(e){function t(t){var n=e.call(this,t)||this;return n.destination=t,n}return i(t,e),t}(v),C=function(e){function t(){var t=e.call(this)||this;return t.observers=[],t.closed=!1,t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return i(t,e),t.prototype[y]=function(){return new P(this)},t.prototype.lift=function(e){var t=new O(this,this);return t.operator=e,t},t.prototype.next=function(e){if(this.closed)throw new S;if(!this.isStopped)for(var t=this.observers,n=t.length,r=t.slice(),i=0;i<n;i++)r[i].next(e)},t.prototype.error=function(e){if(this.closed)throw new S;this.hasError=!0,this.thrownError=e,this.isStopped=!0;for(var t=this.observers,n=t.length,r=t.slice(),i=0;i<n;i++)r[i].error(e);this.observers.length=0},t.prototype.complete=function(){if(this.closed)throw new S;this.isStopped=!0;for(var e=this.observers,t=e.length,n=e.slice(),r=0;r<t;r++)n[r].complete();this.observers.length=0},t.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},t.prototype._trySubscribe=function(t){if(this.closed)throw new S;return e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){if(this.closed)throw new S;return this.hasError?(e.error(this.thrownError),p.EMPTY):this.isStopped?(e.complete(),p.EMPTY):(this.observers.push(e),new T(this,e))},t.prototype.asObservable=function(){var e=new E;return e.source=this,e},t.create=function(e,t){return new O(e,t)},t}(E),O=function(e){function t(t,n){var r=e.call(this)||this;return r.destination=t,r.source=n,r}return i(t,e),t.prototype.next=function(e){var t=this.destination;t&&t.next&&t.next(e)},t.prototype.error=function(e){var t=this.destination;t&&t.error&&this.destination.error(e)},t.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t.prototype._subscribe=function(e){return this.source?this.source.subscribe(e):p.EMPTY},t}(C);var N=function(){function e(e){this.connectable=e}return e.prototype.call=function(e,t){var n=this.connectable;n._refCount++;var r=new M(e,n),i=t.subscribe(r);return r.closed||(r.connection=n.connect()),i},e}(),M=function(e){function t(t,n){var r=e.call(this,t)||this;return r.connectable=n,r}return i(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._refCount;if(t<=0)this.connection=null;else if(e._refCount=t-1,t>1)this.connection=null;else{var n=this.connection,r=e._connection;this.connection=null,!r||n&&r!==n||r.unsubscribe()}}else this.connection=null},t}(v),I=function(e){function t(t,n){var r=e.call(this)||this;return r.source=t,r.subjectFactory=n,r._refCount=0,r._isComplete=!1,r}return i(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=!1,(e=this._connection=new p).add(this.source.subscribe(new z(this.getSubject(),this))),e.closed&&(this._connection=null,e=p.EMPTY)),e},t.prototype.refCount=function(){return(e=this).lift(new N(e));var e},t}(E),z=function(e){function t(t,n){var r=e.call(this,t)||this;return r.connectable=n,r}return i(t,e),t.prototype._error=function(t){this._unsubscribe(),e.prototype._error.call(this,t)},t.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}},t}(P);var j=function(e){function t(t,n,r){var i=e.call(this)||this;return i.key=t,i.groupSubject=n,i.refCountSubscription=r,i}return i(t,e),t.prototype._subscribe=function(e){var t=new p,n=this.refCountSubscription,r=this.groupSubject;return n&&!n.closed&&t.add(new D(n)),t.add(r.subscribe(e)),t},t}(E),D=function(e){function t(t){var n=e.call(this)||this;return n.parent=t,t.count++,n}return i(t,e),t.prototype.unsubscribe=function(){var t=this.parent;t.closed||this.closed||(e.prototype.unsubscribe.call(this),t.count-=1,0===t.count&&t.attemptedToUnsubscribe&&t.unsubscribe())},t}(p),A=function(e){function t(t){var n=e.call(this)||this;return n._value=t,n}return i(t,e),Object.defineProperty(t.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),t.prototype._subscribe=function(t){var n=e.prototype._subscribe.call(this,t);return n&&!n.closed&&t.next(this._value),n},t.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new S;return this._value},t.prototype.next=function(t){e.prototype.next.call(this,this._value=t)},t}(C),R=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.scheduler=t,r.work=n,r.pending=!1,r}return i(t,e),t.prototype.schedule=function(e,t){if(void 0===t&&(t=0),this.closed)return this;this.state=e;var n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,t)),this.pending=!0,this.delay=t,this.id=this.id||this.requestAsyncId(r,this.id,t),this},t.prototype.requestAsyncId=function(e,t,n){return void 0===n&&(n=0),setInterval(e.flush.bind(e,this),n)},t.prototype.recycleAsyncId=function(e,t,n){if(void 0===n&&(n=0),null!==n&&this.delay===n&&!1===this.pending)return t;clearInterval(t)},t.prototype.execute=function(e,t){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var n=this._execute(e,t);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},t.prototype._execute=function(e,t){var n=!1,r=void 0;try{this.work(e)}catch(e){n=!0,r=!!e&&e||new Error(e)}if(n)return this.unsubscribe(),r},t.prototype._unsubscribe=function(){var e=this.id,t=this.scheduler,n=t.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=e&&(this.id=this.recycleAsyncId(t,e,null)),this.delay=null},t}(function(e){function t(t,n){return e.call(this)||this}return i(t,e),t.prototype.schedule=function(e,t){return void 0===t&&(t=0),this},t}(p)),F=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.scheduler=t,r.work=n,r}return i(t,e),t.prototype.schedule=function(t,n){return void 0===n&&(n=0),n>0?e.prototype.schedule.call(this,t,n):(this.delay=n,this.state=t,this.scheduler.flush(this),this)},t.prototype.execute=function(t,n){return n>0||this.closed?e.prototype.execute.call(this,t,n):this._execute(t,n)},t.prototype.requestAsyncId=function(t,n,r){return void 0===r&&(r=0),null!==r&&r>0||null===r&&this.delay>0?e.prototype.requestAsyncId.call(this,t,n,r):t.flush(this)},t}(R),L=function(){function e(t,n){void 0===n&&(n=e.now),this.SchedulerAction=t,this.now=n}return e.prototype.schedule=function(e,t,n){return void 0===t&&(t=0),new this.SchedulerAction(this,e).schedule(n,t)},e.now=function(){return Date.now()},e}(),U=function(e){function t(n,r){void 0===r&&(r=L.now);var i=e.call(this,n,(function(){return t.delegate&&t.delegate!==i?t.delegate.now():r()}))||this;return i.actions=[],i.active=!1,i.scheduled=void 0,i}return i(t,e),t.prototype.schedule=function(n,r,i){return void 0===r&&(r=0),t.delegate&&t.delegate!==this?t.delegate.schedule(n,r,i):e.prototype.schedule.call(this,n,r,i)},t.prototype.flush=function(e){var t=this.actions;if(this.active)t.push(e);else{var n;this.active=!0;do{if(n=e.execute(e.state,e.delay))break}while(e=t.shift());if(this.active=!1,n){for(;e=t.shift();)e.unsubscribe();throw n}}},t}(L),B=new(function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(U))(F),V=new E((function(e){return e.complete()}));function W(e){return e?function(e){return new E((function(t){return e.schedule((function(){return t.complete()}))}))}(e):V}function Q(e){return e&&"function"==typeof e.schedule}var Y,H=function(e){return function(t){for(var n=0,r=e.length;n<r&&!t.closed;n++)t.next(e[n]);t.complete()}};function q(e,t){return new E((function(n){var r=new p,i=0;return r.add(t.schedule((function(){i!==e.length?(n.next(e[i++]),n.closed||r.add(this.schedule())):n.complete()}))),r}))}function $(e,t){return t?q(e,t):new E(H(e))}function X(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=e[e.length-1];return Q(n)?(e.pop(),q(e,n)):$(e)}function K(e,t){return new E(t?function(n){return t.schedule(G,0,{error:e,subscriber:n})}:function(t){return t.error(e)})}function G(e){var t=e.error;e.subscriber.error(t)}Y||(Y={});var J=function(){function e(e,t,n){this.kind=e,this.value=t,this.error=n,this.hasValue="N"===e}return e.prototype.observe=function(e){switch(this.kind){case"N":return e.next&&e.next(this.value);case"E":return e.error&&e.error(this.error);case"C":return e.complete&&e.complete()}},e.prototype.do=function(e,t,n){switch(this.kind){case"N":return e&&e(this.value);case"E":return t&&t(this.error);case"C":return n&&n()}},e.prototype.accept=function(e,t,n){return e&&"function"==typeof e.next?this.observe(e):this.do(e,t,n)},e.prototype.toObservable=function(){switch(this.kind){case"N":return X(this.value);case"E":return K(this.error);case"C":return W()}throw new Error("unexpected notification kind value")},e.createNext=function(t){return void 0!==t?new e("N",t):e.undefinedValueNotification},e.createError=function(t){return new e("E",void 0,t)},e.createComplete=function(){return e.completeNotification},e.completeNotification=new e("C"),e.undefinedValueNotification=new e("N",void 0),e}();var Z=function(e){function t(t,n,r){void 0===r&&(r=0);var i=e.call(this,t)||this;return i.scheduler=n,i.delay=r,i}return i(t,e),t.dispatch=function(e){var t=e.notification,n=e.destination;t.observe(n),this.unsubscribe()},t.prototype.scheduleMessage=function(e){this.destination.add(this.scheduler.schedule(t.dispatch,this.delay,new ee(e,this.destination)))},t.prototype._next=function(e){this.scheduleMessage(J.createNext(e))},t.prototype._error=function(e){this.scheduleMessage(J.createError(e)),this.unsubscribe()},t.prototype._complete=function(){this.scheduleMessage(J.createComplete()),this.unsubscribe()},t}(v),ee=function(){return function(e,t){this.notification=e,this.destination=t}}(),te=function(e){function t(t,n,r){void 0===t&&(t=Number.POSITIVE_INFINITY),void 0===n&&(n=Number.POSITIVE_INFINITY);var i=e.call(this)||this;return i.scheduler=r,i._events=[],i._infiniteTimeWindow=!1,i._bufferSize=t<1?1:t,i._windowTime=n<1?1:n,n===Number.POSITIVE_INFINITY?(i._infiniteTimeWindow=!0,i.next=i.nextInfiniteTimeWindow):i.next=i.nextTimeWindow,i}return i(t,e),t.prototype.nextInfiniteTimeWindow=function(t){var n=this._events;n.push(t),n.length>this._bufferSize&&n.shift(),e.prototype.next.call(this,t)},t.prototype.nextTimeWindow=function(t){this._events.push(new ne(this._getNow(),t)),this._trimBufferThenGetEvents(),e.prototype.next.call(this,t)},t.prototype._subscribe=function(e){var t,n=this._infiniteTimeWindow,r=n?this._events:this._trimBufferThenGetEvents(),i=this.scheduler,o=r.length;if(this.closed)throw new S;if(this.isStopped||this.hasError?t=p.EMPTY:(this.observers.push(e),t=new T(this,e)),i&&e.add(e=new Z(e,i)),n)for(var u=0;u<o&&!e.closed;u++)e.next(r[u]);else for(u=0;u<o&&!e.closed;u++)e.next(r[u].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),t},t.prototype._getNow=function(){return(this.scheduler||B).now()},t.prototype._trimBufferThenGetEvents=function(){for(var e=this._getNow(),t=this._bufferSize,n=this._windowTime,r=this._events,i=r.length,o=0;o<i&&!(e-r[o].time<n);)o++;return i>t&&(o=Math.max(o,i-t)),o>0&&r.splice(0,o),r},t}(C),ne=function(){return function(e,t){this.time=e,this.value=t}}(),re=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.value=null,t.hasNext=!1,t.hasCompleted=!1,t}return i(t,e),t.prototype._subscribe=function(t){return this.hasError?(t.error(this.thrownError),p.EMPTY):this.hasCompleted&&this.hasNext?(t.next(this.value),t.complete(),p.EMPTY):e.prototype._subscribe.call(this,t)},t.prototype.next=function(e){this.hasCompleted||(this.value=e,this.hasNext=!0)},t.prototype.error=function(t){this.hasCompleted||e.prototype.error.call(this,t)},t.prototype.complete=function(){this.hasCompleted=!0,this.hasNext&&e.prototype.next.call(this,this.value),e.prototype.complete.call(this)},t}(C),ie=1,oe=function(){return Promise.resolve()}(),ue={};function ae(e){return e in ue&&(delete ue[e],!0)}var le=function(e){var t=ie++;return ue[t]=!0,oe.then((function(){return ae(t)&&e()})),t},se=function(e){ae(e)},ce=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.scheduler=t,r.work=n,r}return i(t,e),t.prototype.requestAsyncId=function(t,n,r){return void 0===r&&(r=0),null!==r&&r>0?e.prototype.requestAsyncId.call(this,t,n,r):(t.actions.push(this),t.scheduled||(t.scheduled=le(t.flush.bind(t,null))))},t.prototype.recycleAsyncId=function(t,n,r){if(void 0===r&&(r=0),null!==r&&r>0||null===r&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,n,r);0===t.actions.length&&(se(n),t.scheduled=void 0)},t}(R),fe=new(function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.flush=function(e){this.active=!0,this.scheduled=void 0;var t,n=this.actions,r=-1,i=n.length;e=e||n.shift();do{if(t=e.execute(e.state,e.delay))break}while(++r<i&&(e=n.shift()));if(this.active=!1,t){for(;++r<i&&(e=n.shift());)e.unsubscribe();throw t}},t}(U))(ce),de=new U(R),pe=function(e){function t(t,n){var r=e.call(this,t,n)||this;return r.scheduler=t,r.work=n,r}return i(t,e),t.prototype.requestAsyncId=function(t,n,r){return void 0===r&&(r=0),null!==r&&r>0?e.prototype.requestAsyncId.call(this,t,n,r):(t.actions.push(this),t.scheduled||(t.scheduled=requestAnimationFrame((function(){return t.flush(null)}))))},t.prototype.recycleAsyncId=function(t,n,r){if(void 0===r&&(r=0),null!==r&&r>0||null===r&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,n,r);0===t.actions.length&&(cancelAnimationFrame(n),t.scheduled=void 0)},t}(R),he=new(function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.flush=function(e){this.active=!0,this.scheduled=void 0;var t,n=this.actions,r=-1,i=n.length;e=e||n.shift();do{if(t=e.execute(e.state,e.delay))break}while(++r<i&&(e=n.shift()));if(this.active=!1,t){for(;++r<i&&(e=n.shift());)e.unsubscribe();throw t}},t}(U))(pe),ye=function(e){function t(t,n){void 0===t&&(t=ve),void 0===n&&(n=Number.POSITIVE_INFINITY);var r=e.call(this,t,(function(){return r.frame}))||this;return r.maxFrames=n,r.frame=0,r.index=-1,r}return i(t,e),t.prototype.flush=function(){for(var e,t,n=this.actions,r=this.maxFrames;(t=n[0])&&t.delay<=r&&(n.shift(),this.frame=t.delay,!(e=t.execute(t.state,t.delay))););if(e){for(;t=n.shift();)t.unsubscribe();throw e}},t.frameTimeFactor=10,t}(U),ve=function(e){function t(t,n,r){void 0===r&&(r=t.index+=1);var i=e.call(this,t,n)||this;return i.scheduler=t,i.work=n,i.index=r,i.active=!0,i.index=t.index=r,i}return i(t,e),t.prototype.schedule=function(n,r){if(void 0===r&&(r=0),!this.id)return e.prototype.schedule.call(this,n,r);this.active=!1;var i=new t(this.scheduler,this.work);return this.add(i),i.schedule(n,r)},t.prototype.requestAsyncId=function(e,n,r){void 0===r&&(r=0),this.delay=e.frame+r;var i=e.actions;return i.push(this),i.sort(t.sortActions),!0},t.prototype.recycleAsyncId=function(e,t,n){void 0===n&&(n=0)},t.prototype._execute=function(t,n){if(!0===this.active)return e.prototype._execute.call(this,t,n)},t.sortActions=function(e,t){return e.delay===t.delay?e.index===t.index?0:e.index>t.index?1:-1:e.delay>t.delay?1:-1},t}(R);function me(){}function be(e){return!!e&&(e instanceof E||"function"==typeof e.lift&&"function"==typeof e.subscribe)}var ge=function(){function e(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return e.prototype=Object.create(Error.prototype),e}(),we=function(){function e(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}return e.prototype=Object.create(Error.prototype),e}(),xe=function(){function e(){return Error.call(this),this.message="Timeout has occurred",this.name="TimeoutError",this}return e.prototype=Object.create(Error.prototype),e}();function _e(e,t){return function(n){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return n.lift(new Ee(e,t))}}var Ee=function(){function e(e,t){this.project=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new ke(e,this.project,this.thisArg))},e}(),ke=function(e){function t(t,n,r){var i=e.call(this,t)||this;return i.project=n,i.count=0,i.thisArg=r||i,i}return i(t,e),t.prototype._next=function(e){var t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(v);function Se(e,t,n){if(t){if(!Q(t))return function(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];return Se(e,n).apply(void 0,r).pipe(_e((function(e){return c(e)?t.apply(void 0,e):t(e)})))};n=t}return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var i,o=this,u={context:o,subject:i,callbackFunc:e,scheduler:n};return new E((function(r){if(n){var a={args:t,subscriber:r,params:u};return n.schedule(Te,0,a)}if(!i){i=new re;try{e.apply(o,t.concat([function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];i.next(e.length<=1?e[0]:e),i.complete()}]))}catch(e){b(i)?i.error(e):console.warn(e)}}return i.subscribe(r)}))}}function Te(e){var t=this,n=e.args,r=e.subscriber,i=e.params,o=i.callbackFunc,u=i.context,a=i.scheduler,l=i.subject;if(!l){l=i.subject=new re;try{o.apply(u,n.concat([function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=e.length<=1?e[0]:e;t.add(a.schedule(Pe,0,{value:r,subject:l}))}]))}catch(e){l.error(e)}}this.add(l.subscribe(r))}function Pe(e){var t=e.value,n=e.subject;n.next(t),n.complete()}function Ce(e,t,n){if(t){if(!Q(t))return function(){for(var r=[],i=0;i<arguments.length;i++)r[i]=arguments[i];return Ce(e,n).apply(void 0,r).pipe(_e((function(e){return c(e)?t.apply(void 0,e):t(e)})))};n=t}return function(){for(var t=[],r=0;r<arguments.length;r++)t[r]=arguments[r];var i={subject:void 0,args:t,callbackFunc:e,scheduler:n,context:this};return new E((function(r){var o=i.context,u=i.subject;if(n)return n.schedule(Oe,0,{params:i,subscriber:r,context:o});if(!u){u=i.subject=new re;try{e.apply(o,t.concat([function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=e.shift();n?u.error(n):(u.next(e.length<=1?e[0]:e),u.complete())}]))}catch(e){b(u)?u.error(e):console.warn(e)}}return u.subscribe(r)}))}}function Oe(e){var t=this,n=e.params,r=e.subscriber,i=e.context,o=n.callbackFunc,u=n.args,a=n.scheduler,l=n.subject;if(!l){l=n.subject=new re;try{o.apply(i,u.concat([function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var r=e.shift();if(r)t.add(a.schedule(Me,0,{err:r,subject:l}));else{var i=e.length<=1?e[0]:e;t.add(a.schedule(Ne,0,{value:i,subject:l}))}}]))}catch(e){this.add(a.schedule(Me,0,{err:e,subject:l}))}}this.add(l.subscribe(r))}function Ne(e){var t=e.value,n=e.subject;n.next(t),n.complete()}function Me(e){var t=e.err;e.subject.error(t)}var Ie=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t.prototype.notifyNext=function(e,t,n,r,i){this.destination.next(t)},t.prototype.notifyError=function(e,t){this.destination.error(e)},t.prototype.notifyComplete=function(e){this.destination.complete()},t}(v),ze=function(e){function t(t,n,r){var i=e.call(this)||this;return i.parent=t,i.outerValue=n,i.outerIndex=r,i.index=0,i}return i(t,e),t.prototype._next=function(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)},t.prototype._error=function(e){this.parent.notifyError(e,this),this.unsubscribe()},t.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},t}(v);function je(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}var De=je(),Ae=function(e){return e&&"number"==typeof e.length&&"function"!=typeof e};function Re(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}var Fe=function(e){if(e&&"function"==typeof e[g])return r=e,function(e){var t=r[g]();if("function"!=typeof t.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return t.subscribe(e)};if(Ae(e))return H(e);if(Re(e))return n=e,function(e){return n.then((function(t){e.closed||(e.next(t),e.complete())}),(function(t){return e.error(t)})).then(null,l),e};if(e&&"function"==typeof e[De])return t=e,function(e){for(var n=t[De]();;){var r=n.next();if(r.done){e.complete();break}if(e.next(r.value),e.closed)break}return"function"==typeof n.return&&e.add((function(){n.return&&n.return()})),e};var t,n,r,i=f(e)?"an invalid object":"'"+e+"'";throw new TypeError("You provided "+i+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.")};function Le(e,t,n,r,i){if(void 0===i&&(i=new ze(e,n,r)),!i.closed)return t instanceof E?t.subscribe(i):Fe(t)(i)}var Ue={};function Be(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=null,r=null;return Q(e[e.length-1])&&(r=e.pop()),"function"==typeof e[e.length-1]&&(n=e.pop()),1===e.length&&c(e[0])&&(e=e[0]),$(e,r).lift(new Ve(n))}var Ve=function(){function e(e){this.resultSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new We(e,this.resultSelector))},e}(),We=function(e){function t(t,n){var r=e.call(this,t)||this;return r.resultSelector=n,r.active=0,r.values=[],r.observables=[],r}return i(t,e),t.prototype._next=function(e){this.values.push(Ue),this.observables.push(e)},t.prototype._complete=function(){var e=this.observables,t=e.length;if(0===t)this.destination.complete();else{this.active=t,this.toRespond=t;for(var n=0;n<t;n++){var r=e[n];this.add(Le(this,r,r,n))}}},t.prototype.notifyComplete=function(e){0==(this.active-=1)&&this.destination.complete()},t.prototype.notifyNext=function(e,t,n,r,i){var o=this.values,u=o[n],a=this.toRespond?u===Ue?--this.toRespond:this.toRespond:0;o[n]=t,0===a&&(this.resultSelector?this._tryResultSelector(o):this.destination.next(o.slice()))},t.prototype._tryResultSelector=function(e){var t;try{t=this.resultSelector.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(Ie);function Qe(e,t){if(null!=e){if(function(e){return e&&"function"==typeof e[g]}(e))return function(e,t){return new E((function(n){var r=new p;return r.add(t.schedule((function(){var i=e[g]();r.add(i.subscribe({next:function(e){r.add(t.schedule((function(){return n.next(e)})))},error:function(e){r.add(t.schedule((function(){return n.error(e)})))},complete:function(){r.add(t.schedule((function(){return n.complete()})))}}))}))),r}))}(e,t);if(Re(e))return function(e,t){return new E((function(n){var r=new p;return r.add(t.schedule((function(){return e.then((function(e){r.add(t.schedule((function(){n.next(e),r.add(t.schedule((function(){return n.complete()})))})))}),(function(e){r.add(t.schedule((function(){return n.error(e)})))}))}))),r}))}(e,t);if(Ae(e))return q(e,t);if(function(e){return e&&"function"==typeof e[De]}(e)||"string"==typeof e)return function(e,t){if(!e)throw new Error("Iterable cannot be null");return new E((function(n){var r,i=new p;return i.add((function(){r&&"function"==typeof r.return&&r.return()})),i.add(t.schedule((function(){r=e[De](),i.add(t.schedule((function(){if(!n.closed){var e,t;try{var i=r.next();e=i.value,t=i.done}catch(e){return void n.error(e)}t?n.complete():(n.next(e),this.schedule())}})))}))),i}))}(e,t)}throw new TypeError((null!==e&&typeof e||e)+" is not observable")}function Ye(e,t){return t?Qe(e,t):e instanceof E?e:new E(Fe(e))}var He=function(){function e(e,t){void 0===t&&(t=Number.POSITIVE_INFINITY),this.project=e,this.concurrent=t}return e.prototype.call=function(e,t){return t.subscribe(new qe(e,this.project,this.concurrent))},e}(),qe=function(e){function t(t,n,r){void 0===r&&(r=Number.POSITIVE_INFINITY);var i=e.call(this,t)||this;return i.project=n,i.concurrent=r,i.hasCompleted=!1,i.buffer=[],i.active=0,i.index=0,i}return i(t,e),t.prototype._next=function(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)},t.prototype._tryNext=function(e){var t,n=this.index++;try{t=this.project(e,n)}catch(e){return void this.destination.error(e)}this.active++,this._innerSub(t,e,n)},t.prototype._innerSub=function(e,t,n){var r=new ze(this,t,n),i=this.destination;i.add(r);var o=Le(this,e,void 0,void 0,r);o!==r&&i.add(o)},t.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()},t.prototype.notifyNext=function(e,t,n,r,i){this.destination.next(t)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},t}(Ie);function $e(e){return void 0===e&&(e=Number.POSITIVE_INFINITY),function e(t,n,r){return void 0===r&&(r=Number.POSITIVE_INFINITY),"function"==typeof n?function(i){return i.pipe(e((function(e,r){return Ye(t(e,r)).pipe(_e((function(t,i){return n(e,t,r,i)})))}),r))}:("number"==typeof n&&(r=n),function(e){return e.lift(new He(t,r))})}(w,e)}function Xe(){return $e(1)}function Ke(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return Xe()(X.apply(void 0,e))}function Ge(e){return new E((function(t){var n;try{n=e()}catch(e){return void t.error(e)}return(n?Ye(n):W()).subscribe(t)}))}function Je(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(1===e.length){var n=e[0];if(c(n))return Ze(n,null);if(f(n)&&Object.getPrototypeOf(n)===Object.prototype){var r=Object.keys(n);return Ze(r.map((function(e){return n[e]})),r)}}if("function"==typeof e[e.length-1]){var i=e.pop();return Ze(e=1===e.length&&c(e[0])?e[0]:e,null).pipe(_e((function(e){return i.apply(void 0,e)})))}return Ze(e,null)}function Ze(e,t){return new E((function(n){var r=e.length;if(0!==r)for(var i=new Array(r),o=0,u=0,a=function(a){var l=Ye(e[a]),s=!1;n.add(l.subscribe({next:function(e){s||(s=!0,u++),i[a]=e},error:function(e){return n.error(e)},complete:function(){++o!==r&&s||(u===r&&n.next(t?t.reduce((function(e,t,n){return e[t]=i[n],e}),{}):i),n.complete())}}))},l=0;l<r;l++)a(l);else n.complete()}))}function et(e,t,n,r){return o(n)&&(r=n,n=void 0),r?et(e,t,n).pipe(_e((function(e){return c(e)?r.apply(void 0,e):r(e)}))):new E((function(r){!function e(t,n,r,i,o){var u;if(function(e){return e&&"function"==typeof e.addEventListener&&"function"==typeof e.removeEventListener}(t)){var a=t;t.addEventListener(n,r,o),u=function(){return a.removeEventListener(n,r,o)}}else if(function(e){return e&&"function"==typeof e.on&&"function"==typeof e.off}(t)){var l=t;t.on(n,r),u=function(){return l.off(n,r)}}else if(function(e){return e&&"function"==typeof e.addListener&&"function"==typeof e.removeListener}(t)){var s=t;t.addListener(n,r),u=function(){return s.removeListener(n,r)}}else{if(!t||!t.length)throw new TypeError("Invalid event target");for(var c=0,f=t.length;c<f;c++)e(t[c],n,r,i,o)}i.add(u)}(e,t,(function(e){arguments.length>1?r.next(Array.prototype.slice.call(arguments)):r.next(e)}),r,n)}))}function tt(e,t,n){return n?tt(e,t).pipe(_e((function(e){return c(e)?n.apply(void 0,e):n(e)}))):new E((function(n){var r,i=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return n.next(1===e.length?e[0]:e)};try{r=e(i)}catch(e){return void n.error(e)}if(o(t))return function(){return t(i,r)}}))}function nt(e,t,n,r,i){var o,u;if(1==arguments.length){var a=e;u=a.initialState,t=a.condition,n=a.iterate,o=a.resultSelector||w,i=a.scheduler}else void 0===r||Q(r)?(u=e,o=w,i=r):(u=e,o=r);return new E((function(e){var r=u;if(i)return i.schedule(rt,0,{subscriber:e,iterate:n,condition:t,resultSelector:o,state:r});for(;;){if(t){var a=void 0;try{a=t(r)}catch(t){return void e.error(t)}if(!a){e.complete();break}}var l=void 0;try{l=o(r)}catch(t){return void e.error(t)}if(e.next(l),e.closed)break;try{r=n(r)}catch(t){return void e.error(t)}}}))}function rt(e){var t=e.subscriber,n=e.condition;if(!t.closed){if(e.needIterate)try{e.state=e.iterate(e.state)}catch(e){return void t.error(e)}else e.needIterate=!0;if(n){var r=void 0;try{r=n(e.state)}catch(e){return void t.error(e)}if(!r)return void t.complete();if(t.closed)return}var i;try{i=e.resultSelector(e.state)}catch(e){return void t.error(e)}if(!t.closed&&(t.next(i),!t.closed))return this.schedule(e)}}function it(e,t,n){return void 0===t&&(t=V),void 0===n&&(n=V),Ge((function(){return e()?t:n}))}function ot(e){return!c(e)&&e-parseFloat(e)+1>=0}function ut(e,t){return void 0===e&&(e=0),void 0===t&&(t=de),(!ot(e)||e<0)&&(e=0),t&&"function"==typeof t.schedule||(t=de),new E((function(n){return n.add(t.schedule(at,e,{subscriber:n,counter:0,period:e})),n}))}function at(e){var t=e.subscriber,n=e.counter,r=e.period;t.next(n),this.schedule({subscriber:t,counter:n+1,period:r},r)}function lt(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=Number.POSITIVE_INFINITY,r=null,i=e[e.length-1];return Q(i)?(r=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(n=e.pop())):"number"==typeof i&&(n=e.pop()),null===r&&1===e.length&&e[0]instanceof E?e[0]:$e(n)($(e,r))}var st=new E(me);function ct(){return st}function ft(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(0===e.length)return V;var n=e[0],r=e.slice(1);return 1===e.length&&c(n)?ft.apply(void 0,n):new E((function(e){var t=function(){return e.add(ft.apply(void 0,r).subscribe(e))};return Ye(n).subscribe({next:function(t){e.next(t)},error:t,complete:t})}))}function dt(e,t){return new E(t?function(n){var r=Object.keys(e),i=new p;return i.add(t.schedule(pt,0,{keys:r,index:0,subscriber:n,subscription:i,obj:e})),i}:function(t){for(var n=Object.keys(e),r=0;r<n.length&&!t.closed;r++){var i=n[r];e.hasOwnProperty(i)&&t.next([i,e[i]])}t.complete()})}function pt(e){var t=e.keys,n=e.index,r=e.subscriber,i=e.subscription,o=e.obj;if(!r.closed)if(n<t.length){var u=t[n];r.next([u,o[u]]),i.add(this.schedule({keys:t,index:n+1,subscriber:r,subscription:i,obj:o}))}else r.complete()}function ht(e,t){function n(){return!n.pred.apply(n.thisArg,arguments)}return n.pred=e,n.thisArg=t,n}function yt(e,t){return function(n){return n.lift(new vt(e,t))}}var vt=function(){function e(e,t){this.predicate=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new mt(e,this.predicate,this.thisArg))},e}(),mt=function(e){function t(t,n,r){var i=e.call(this,t)||this;return i.predicate=n,i.thisArg=r,i.count=0,i}return i(t,e),t.prototype._next=function(e){var t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}t&&this.destination.next(e)},t}(v);function bt(e,t,n){return[yt(t,n)(new E(Fe(e))),yt(ht(t,n))(new E(Fe(e)))]}function gt(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(1===e.length){if(!c(e[0]))return e[0];e=e[0]}return $(e,void 0).lift(new wt)}var wt=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new xt(e))},e}(),xt=function(e){function t(t){var n=e.call(this,t)||this;return n.hasFirst=!1,n.observables=[],n.subscriptions=[],n}return i(t,e),t.prototype._next=function(e){this.observables.push(e)},t.prototype._complete=function(){var e=this.observables,t=e.length;if(0===t)this.destination.complete();else{for(var n=0;n<t&&!this.hasFirst;n++){var r=e[n],i=Le(this,r,r,n);this.subscriptions&&this.subscriptions.push(i),this.add(i)}this.observables=null}},t.prototype.notifyNext=function(e,t,n,r,i){if(!this.hasFirst){this.hasFirst=!0;for(var o=0;o<this.subscriptions.length;o++)if(o!==n){var u=this.subscriptions[o];u.unsubscribe(),this.remove(u)}this.subscriptions=null}this.destination.next(t)},t}(Ie);function _t(e,t,n){return void 0===e&&(e=0),new E((function(r){void 0===t&&(t=e,e=0);var i=0,o=e;if(n)return n.schedule(Et,0,{index:i,count:t,start:e,subscriber:r});for(;;){if(i++>=t){r.complete();break}if(r.next(o++),r.closed)break}}))}function Et(e){var t=e.start,n=e.index,r=e.count,i=e.subscriber;n>=r?i.complete():(i.next(t),i.closed||(e.index=n+1,e.start=t+1,this.schedule(e)))}function kt(e,t,n){void 0===e&&(e=0);var r=-1;return ot(t)?r=Number(t)<1?1:Number(t):Q(t)&&(n=t),Q(n)||(n=de),new E((function(t){var i=ot(e)?e:+e-n.now();return n.schedule(St,i,{index:0,period:r,subscriber:t})}))}function St(e){var t=e.index,n=e.period,r=e.subscriber;if(r.next(t),!r.closed){if(-1===n)return r.complete();e.index=t+1,this.schedule(e,n)}}function Tt(e,t){return new E((function(n){var r,i;try{r=e()}catch(e){return void n.error(e)}try{i=t(r)}catch(e){return void n.error(e)}var o=(i?Ye(i):V).subscribe(n);return function(){o.unsubscribe(),r&&r.unsubscribe()}}))}function Pt(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var n=e[e.length-1];return"function"==typeof n&&e.pop(),$(e,void 0).lift(new Ct(n))}var Ct=function(){function e(e){this.resultSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new Ot(e,this.resultSelector))},e}(),Ot=function(e){function t(t,n,r){void 0===r&&(r=Object.create(null));var i=e.call(this,t)||this;return i.iterators=[],i.active=0,i.resultSelector="function"==typeof n?n:null,i.values=r,i}return i(t,e),t.prototype._next=function(e){var t=this.iterators;c(e)?t.push(new Mt(e)):"function"==typeof e[De]?t.push(new Nt(e[De]())):t.push(new It(this.destination,this,e))},t.prototype._complete=function(){var e=this.iterators,t=e.length;if(this.unsubscribe(),0!==t){this.active=t;for(var n=0;n<t;n++){var r=e[n];if(r.stillUnsubscribed)this.destination.add(r.subscribe(r,n));else this.active--}}else this.destination.complete()},t.prototype.notifyInactive=function(){this.active--,0===this.active&&this.destination.complete()},t.prototype.checkIterators=function(){for(var e=this.iterators,t=e.length,n=this.destination,r=0;r<t;r++){if("function"==typeof(u=e[r]).hasValue&&!u.hasValue())return}var i=!1,o=[];for(r=0;r<t;r++){var u,a=(u=e[r]).next();if(u.hasCompleted()&&(i=!0),a.done)return void n.complete();o.push(a.value)}this.resultSelector?this._tryresultSelector(o):n.next(o),i&&n.complete()},t.prototype._tryresultSelector=function(e){var t;try{t=this.resultSelector.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(v),Nt=function(){function e(e){this.iterator=e,this.nextResult=e.next()}return e.prototype.hasValue=function(){return!0},e.prototype.next=function(){var e=this.nextResult;return this.nextResult=this.iterator.next(),e},e.prototype.hasCompleted=function(){var e=this.nextResult;return e&&e.done},e}(),Mt=function(){function e(e){this.array=e,this.index=0,this.length=0,this.length=e.length}return e.prototype[De]=function(){return this},e.prototype.next=function(e){var t=this.index++,n=this.array;return t<this.length?{value:n[t],done:!1}:{value:null,done:!0}},e.prototype.hasValue=function(){return this.array.length>this.index},e.prototype.hasCompleted=function(){return this.array.length===this.index},e}(),It=function(e){function t(t,n,r){var i=e.call(this,t)||this;return i.parent=n,i.observable=r,i.stillUnsubscribed=!0,i.buffer=[],i.isComplete=!1,i}return i(t,e),t.prototype[De]=function(){return this},t.prototype.next=function(){var e=this.buffer;return 0===e.length&&this.isComplete?{value:null,done:!0}:{value:e.shift(),done:!1}},t.prototype.hasValue=function(){return this.buffer.length>0},t.prototype.hasCompleted=function(){return 0===this.buffer.length&&this.isComplete},t.prototype.notifyComplete=function(){this.buffer.length>0?(this.isComplete=!0,this.parent.notifyInactive()):this.destination.complete()},t.prototype.notifyNext=function(e,t,n,r,i){this.buffer.push(t),this.parent.checkIterators()},t.prototype.subscribe=function(e,t){return Le(this,this.observable,this,t)},t}(Ie)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,